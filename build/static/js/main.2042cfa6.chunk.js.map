{"version":3,"sources":["styles/loader.module.scss","styles/scrape.module.scss","models/scrapeTypes.ts","images/gleif-logo-full.png","images/LSEG_LOGO_RGB_GWB_0.png","routes.ts","components/Common/Header.tsx","helpers/apiCalls.ts","helpers/utils.ts","components/Scrape/matchFunc.tsx","helpers/scrapeUtils.ts","models/dqTypes.ts","redux/scrape.ts","components/Common/toast.ts","components/Scrape/ScrapeSingleTable.tsx","components/FlexTable/helpers.ts","components/FlexTable/FlexHeaderSelect.tsx","components/FlexTable/FlexHeaderCell.tsx","components/FlexTable/FlexHeader.tsx","components/FlexTable/FlexTable.tsx","components/FlexTable/FlexUtils.ts","components/Scrape/ScrapeFullTable.tsx","components/Scrape/ScrapeContent.tsx","components/Common/Button.tsx","components/Scrape/ScrapeHeader.tsx","components/Common/Loader.tsx","components/Scrape/ScrapeReportBox.tsx","components/Scrape/ScrapeMain.tsx","helpers/dqUtils.tsx","models/concatTypes.ts","redux/dq.ts","components/DQ/DQTable.tsx","components/DQ/DQHeader.tsx","components/DQ/DQSingleTable.tsx","components/DQ/DQMain.tsx","redux/concat.ts","components/Concat/ConcatHeader.tsx","components/Concat/ConcatTable.tsx","images/no_results.png","components/Concat/ConcatMain.tsx","images/BSL_Labs_-_Aug_2019.png","components/Common/Sidebar.tsx","components/Auth/RedirectComponent.tsx","App.tsx","components/Auth/auth.ts","redux/_store.ts","index.tsx","styles/flexTable.module.scss","styles/tables.module.scss","styles/dq.module.scss","styles/sidebar.module.scss","styles/concat.module.scss","styles/header.module.scss","styles/buttons.module.scss"],"names":["module","exports","DataView","FilterState","rootPath","sopRootPath","routes","scrape","dq","concat","sop","analytics","sopSubRoutes","PensionScheme","Trust","Company","Charity","Funds","RAList","ELFCode","OnHoldText","Procedures","ImportantRequestor","ValidationDoc","titleMap","route","title","subtitle","browserTitle","Header","location","useLocation","headerObj","find","el","pathname","document","loading","useSelector","state","className","cx","styles","container","blockElement","src","gleifLogo","alt","glief_logo","split","lsegLogo","address","process","checkScrapeValidation","data","axios","post","postScrapeRequest","fetchScrapeRequestData","timestamp","get","downloadDQExcel","capitalize","s","slice","toUpperCase","setIntersection","sets","s1","Array","from","forEach","set","filter","has","range","end","start","step","seq","index","push","promisifiedTimeout","interval","Promise","resolve","setTimeout","fileToBase64","file","reject","reader","FileReader","readAsDataURL","onload","result","onerror","err","matchFunc","val1","val2","map","word","classname","unMatchingText","toLowerCase","replace","includes","matchingText","uuid","fetchScrapeRequests","dispatch","a","fileString","validateScrapeData","validationResponse","setFileDetails","uploaded_file","response","Color","Impact","initialState","ScrapeData","filteredByView","filteredByRA","uniqueRAs","fieldList","filterTableCols","sortTableCol","expand","dataView","single","filterState","all","ErrorMsg","fileDetails","kfids","numRecords","expandAction","createAction","setDataView","selectRaAction","setLocalFinished","setLocalProgress","setFilterTableCol","setFilterState","setSortState","clearAllTableFilters","clearAllState","fetchScrapeData","createAsyncThunk","args","thunkAPI","isInitial","Date","now","error","rejectWithValue","errMessage","fetchOnlyData","_","getState","scrapeReducer","createReducer","builder","addCase","action","payload","pending","fulfilled","Items","item","finished","onProgress","kfid","Set","ra_id","rejected","content","type","toaster","notify","duration","success","warning","toast","progress","table","Object","values","keys","column","assign","addDefaultCase","ScrapeSingleTable","useDispatch","useState","localExpand","setLocalExpand","headerClass","scrapeSingle__header","scrapeSingle","dangerouslySetExpanded","ref_no","onClick","style","display","scrapeSingle__table","field","uv_value","scraped_value","match","computedStyles","width","calcHeaderWidth","tableRef","current","scrollHeight","clientHeight","FlexHeaderSelect","props","col","selectColumns","handleSelect","options","colWidth","colName","value","label","isClearable","isSearchable","onChange","event","handleSearchWrapper","FlexHeaderCell","handleSort","active","desc","FlexHeader","columns","sortColumns","table__header","FlexTable","rowNum","setRefChange","useRef","useEffect","tableWidth","reduce","acc","curr","calcTableWidth","table__body","ref","filterData","filterCols","indexSetArray","indices","idx","filteredIndices","key","length","sortData","sortedIndices","arr","sort","b","sortArrayIndex","sortedArray","createOptions","cols","ScrapeFullTable","flatMap","createColumns","arrangedData","arrangeData","undefined","elements1","elements2","formatData","tableContainer","ScrapeContent","s2","filteredIDs","filteredData","allowMultipleExpanded","allowZeroExpanded","dataContent","Button","text","clickHandler","animatedButton","jira","ScrapeHeader","d","setFile","header","header__left","SegmentedControl","Switch","height","checked","disabled","header__right","Select","e","target","ra","id","toDateString","toLocaleTimeString","FilePicker","multiple","placeholder","marginRight","fileList","Loader","message","Spinner","alignItems","justifyContent","size","ScrapeReportBox","numFetched","isShown","setIsShown","description","CornerDialog","hasFooter","onCloseComplete","ScrapeMain","component","Fragment","colNames","ImpactToColor","Critical","Red","High","Burgundy","Medium","Orange","Low","Yellow","colorObj","ConcatFileTypes","selectedKfid","view","isInitialState","populateKfids","setView","setKfid","clearAll","fetchData","dqReducer","DQTable","ErrorCategory","ErrorDescription","KeyFieldValue","Owner","columnList","ErrorImpact","OfficialEntityName","LEIStatus","FieldsOrRelatedField","Count","flattenedData","flatData","newRowObj","join","metaData","metadata","newAdditionalRowObj","flattenData","tableData","counts","kfidCount","toString","calculateKFIDCount","formattedData","coloredNodes","color","backgroundColor","padding","DQHeader","selectOptions","fileContent","console","downloadExcelHandler","time","bstr","atob","n","u8arr","Uint8Array","charCodeAt","filename","toTimeString","splice","File","url","window","URL","createObjectURL","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","DQSingleTable","KFID","kfidData","singleTable","singleTable__metadata","tableStyles","dqSingleTable","DQMain","contentNode","distinctKfids","noData","fileType","rr","initData","setFileType","setValue","queryParams","records","fetchInitData","concatReducer","ConcatHeader","radioOptions","lei","repex","content__header","RadioGroup","TextInputField","toLocaleString","ConcatTable","concatTable__table","i","ConcatMain","contentComponent","NoResults","content__table","Sidebar","sidebar","icon","to","BSLLabsLogo","logo","RedirectComponent","App","isValid","decodedAccessToken","decodedIdToken","accessToken","idToken","log","jwt_decode","isValidToken","URLSearchParams","hash","getToken","mainComponent","path","exact","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,YAAc,8B,mBCAtED,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,aAAe,6BAA6B,sBAAsB,oCAAoC,sBAAsB,oCAAoC,2BAA2B,yCAAyC,cAAgB,8BAA8B,2BAA2B,yCAAyC,YAAc,4BAA4B,eAAiB,+BAA+B,aAAe,6BAA6B,eAAiB,iC,4CCsErjBC,EAKAC,E,gFC5EG,MAA0B,4CCA1B,MAA0B,gDCAnCC,EAAW,IACXC,EAAc,MAuBLC,EArBA,CACbC,OAAO,GAAD,OAAKH,GACXI,GAAG,GAAD,OAAKJ,EAAL,UACFK,OAAO,GAAD,OAAKL,EAAL,UACNM,IAAI,GAAD,OAAKN,EAAL,OACHO,UAAU,GAAD,OAAKP,EAAL,aACTQ,aAAc,CACZC,cAAc,GAAD,OAAKT,GAAL,OAAgBC,EAAhB,YACbS,MAAM,GAAD,OAAKV,GAAL,OAAgBC,EAAhB,UACLU,QAAQ,GAAD,OAAKX,GAAL,OAAgBC,EAAhB,YACPW,QAAQ,GAAD,OAAKZ,GAAL,OAAgBC,EAAhB,YACPY,MAAM,GAAD,OAAKb,GAAL,OAAgBC,EAAhB,UACLa,OAAO,GAAD,OAAKd,GAAL,OAAgBC,EAAhB,WACNc,QAAQ,GAAD,OAAKf,GAAL,OAAgBC,EAAhB,YACPe,WAAW,GAAD,OAAKhB,GAAL,OAAgBC,EAAhB,eACVgB,WAAW,GAAD,OAAKjB,GAAL,OAAgBC,EAAhB,eACViB,mBAAmB,GAAD,OAAKlB,GAAL,OAAgBC,EAAhB,eAClBkB,cAAc,GAAD,OAAKnB,GAAL,OAAgBC,EAAhB,qB,iBCVXmB,G,MAAW,CACf,CACEC,MAAOnB,EAAOC,OACdmB,MAAO,cACPC,SAAU,eACVC,aAAc,kBAEhB,CACEH,MAAOnB,EAAOE,GACdkB,MAAO,UACPC,SAAU,gBACVC,aAAc,cAEhB,CACEH,MAAOnB,EAAOG,OACdiB,MAAO,cACPC,SAAU,6BACVC,aAAc,kBAEhB,CACEH,MAAOnB,EAAOI,IACdgB,MAAO,WACPC,SAAU,+BACVC,aAAc,eAEhB,CACEH,MAAOnB,EAAOK,UACde,MAAO,iBACPC,SAAU,sBACVC,aAAc,uBA2BHC,EAvBA,WACb,IAAIC,EAAWC,cACTC,EAAYR,EAASS,MAAK,SAACC,GAAD,OAAQJ,EAASK,WAAaD,EAAGT,SAGjEW,SAASV,MAAQM,EAAWJ,aALT,IAOXS,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMhC,UAApD8B,QAER,OACE,sBAAKG,UAAWC,IAAGC,IAAOC,UAAW,CAAEC,aAAcP,IAArD,UACE,qBAAKQ,IAAKC,EAAWC,IAAI,aAAaP,UAAWE,IAAOM,aACxD,sBAAKR,UAAWE,IAAOhB,MAAvB,UACE,+BACE,sCAAOM,QAAP,IAAOA,OAAP,EAAOA,EAAWN,MAAMuB,MAAM,KAAK,KADrC,WACiDjB,QADjD,IACiDA,OADjD,EACiDA,EAAWN,MAAMuB,MAAM,KAAK,MAE7E,oCAAKjB,QAAL,IAAKA,OAAL,EAAKA,EAAWL,cAElB,qBAAKkB,IAAKK,EAAUH,IAAI,YAAYP,UAAWE,IAAOQ,e,4CJUhDhD,K,gBAAAA,E,eAAAA,M,cAKAC,K,UAAAA,E,oBAAAA,E,qBAAAA,M,0GKjENgD,EAAUC,6DAEHC,EAAwB,SACnCC,GAEA,OAAOC,IAAMC,KAAN,UAAcL,EAAd,0BAA+CG,IAO3CG,EAAoB,SAC/BH,GAEA,OAAOC,IAAMC,KAAN,UAAcL,EAAd,eAAoCG,IAGhCI,EAAyB,SACpCC,GAEA,OAAOJ,IAAMK,IAAN,UAAaT,EAAb,iCAA6CQ,KASzCE,EAAkB,SAC7BF,GAEA,OAAOJ,IAAMK,IAAN,UAAaT,EAAb,mCAA+CQ,K,gBCpC3CG,EAAa,SAACC,GACzB,OAAOA,EAAEC,MAAM,EAAG,GAAGC,cAAgBF,EAAEC,MAAM,IAGlCE,EAAkB,WAAgC,IAAD,uBAAxBC,EAAwB,yBAAxBA,EAAwB,gBAC5D,IAAIC,EAAKC,MAAMC,KAAKH,EAAK,IAMzB,OAJAA,EAAKH,MAAM,GAAGO,SAAQ,SAACC,GACrBJ,EAAKA,EAAGK,QAAO,SAACvC,GAAD,OAAQsC,EAAIE,IAAIxC,SAG1BkC,GAOIO,EAAQ,SAACC,GAEpB,IAFoE,IAAnCC,EAAkC,uDAA1B,EAAGC,EAAuB,uDAAhB,EAC7CC,EAAgB,GACbC,EAAQH,EAAOG,EAAQJ,EAAKI,GAASF,EAC5CC,EAAIE,KAAKD,GAEX,OAAOD,GAwBF,SAASG,EAAmBC,GACjC,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MAG/C,SAASI,EAAaC,GAC3B,OAAO,IAAIJ,SAAQ,SAACC,EAASI,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GACrBE,EAAOG,OAAS,kBAAMR,EAASK,EAAOI,OAAkB7C,MAAM,YAAY,KAC1EyC,EAAOK,QAAU,SAACC,GAAD,OAASP,EAAOO,OC7D9B,IAAMC,EAAY,SAACC,EAAcC,GACtC,OAAKD,GAASC,EAMZ,8BACGD,EAAKjD,MAAM,aAAamD,KAAI,SAACC,GAC5B,IAAIC,EAAY5D,IAAO6D,eASvB,OAPEJ,EACGK,cACAC,QAAQ,SAAU,IAClBC,SAASL,EAAKG,cAAcC,QAAQ,SAAU,OAEjDH,EAAY5D,IAAOiE,cAGnB,uBAAmBnE,UAAW8D,EAA9B,UACGD,EAAM,MADEO,oBAjBZV,EACE,8BAAMA,IADK,wCC0Df,SAAeW,EAAtB,uC,8CAAO,WACLrB,EACA7B,EACAmD,GAHK,qBAAAC,EAAA,+EAMsBxB,EAAaC,GANnC,cAMGwB,EANH,gBAO8BC,GAAmBD,GAPjD,cAOGE,EAPH,OAQHJ,EAASK,GAAeD,IARrB,UASoBzD,EAAkB,CACvC2D,cAAeJ,EACfrD,cAXC,eASG0D,EATH,yBAaI,CAAE/D,KAAM+D,EAAS/D,KAAKA,OAb1B,0CAiBQ+D,SAjBR,kCAkBKnC,EAAmB,KAlBxB,yBAmBsBxB,EAAuBC,GAnB7C,eAmBK0D,EAnBL,yBAoBM,CAAE/D,KAAM+D,EAAS/D,KAAKA,OApB5B,8E,sBA0BA,SAAe2D,GAAtB,mC,8CAAO,WAAkCD,GAAlC,eAAAD,EAAA,+EAEoB1D,EAAsB,CAAE+D,cAAeJ,IAF3D,cAEGK,EAFH,yBAGIA,EAAS/D,MAHb,qG,gCCzFFgE,GAOAC,G,UCSCC,GAA4B,CAChCC,WAAY,GACZ9D,UAAW,EACX+D,eAAgB,GAChBC,aAAc,GACdC,UAAW,GACXC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,QAAQ,EACRC,SAAU/H,EAASgI,OACnBC,YAAahI,EAAYiI,IACzB/F,SAAS,EACTgG,SAAU,KACVC,YAAa,CACXC,MAAO,GACPC,WAAY,IAKHC,GAAeC,YAAa,iBAC5BvB,GAAiBuB,YAAiC,yBAClDC,GAAcD,YAAa,sBAC3BE,GAAiBF,YAAqB,mBACtCG,GAAmBH,YAAqB,yBACxCI,GAAmBJ,YAAqB,2BACxCK,GAAoBL,YAA8B,0BAClDM,GAAiBN,YAA0B,yBAC3CO,GAAeP,YAA2B,uBAC1CQ,GAAuBR,YAAa,+BACpCS,GAAgBT,YAAa,wBAG7BU,GAAkBC,YAC7B,yBAD6C,uCAE7C,WAAOC,EAAiDC,GAAxD,uCAAAxC,EAAA,yDACUD,EAAayC,EAAbzC,SACA0C,EAAoBF,EAApBE,UAAWhE,EAAS8D,EAAT9D,KAFrB,UAKQgE,EALR,gCLhCOjG,IAAMK,IAAN,UAAaT,EAAb,qBKgCP,cAMYkE,EANZ,SAO6CA,EAAS/D,KAAxCA,EAPd,EAOcA,KAAMK,EAPpB,EAOoBA,UAAWkE,EAP/B,EAO+BA,UAP/B,kBAQa,CAAEvE,OAAMK,YAAWkE,cARhC,cAWUlE,EAAY8F,KAAKC,MAX3B,UAY2B7C,EAAoBrB,EAAc7B,EAAWmD,GAZxE,wBAYYxD,EAZZ,EAYYA,KACRwD,EAASqC,MAbb,kBAcW,CAAE7F,OAAMK,cAdnB,yCAgBUgG,EAhBV,uBAiBWJ,EAASK,gBAAT,UAAyBD,EAAMtC,gBAA/B,aAAyB,EAAgB/D,KAAKuG,aAjBzD,0DAF6C,yDAwBlCC,GAAgBT,YAC3B,uBAD2C,uCAE3C,WAAOU,EAAP,sBAAAhD,EAAA,6DAAYiD,EAAZ,EAAYA,SACFrG,EAAeqG,IAAyBzJ,OAAxCoD,UADV,SAEyBD,EAAuBC,GAFhD,cAEQ0D,EAFR,yBAGS,CAAE/D,KAAM+D,EAAS/D,KAAKA,OAH/B,2CAF2C,yDAiH9B2G,GAvGOC,YAAc1C,IAAc,SAAC2C,GACjDA,EACGC,QAAQjD,IAAgB,SAAC5E,EAAO8H,GAC/B9H,EAAM+F,YAAYC,MAAQ8B,EAAOC,QAAQ/B,MACzChG,EAAM+F,YAAYE,WAAa6B,EAAOC,QAAQ9B,cAE/C4B,QAAQhB,GAAgBmB,SAAS,SAAChI,GACjCA,EAAMF,SAAU,KAEjB+H,QAAQhB,GAAgBoB,WAAW,SAACjI,EAAO8H,GAC1C9H,EAAMF,SAAU,EAChBE,EAAM8F,SAAW,KAFoC,MAGlBgC,EAAOC,QAA5BG,EAHuC,EAG7CnH,KAAaK,EAHgC,EAGhCA,UACrB8G,EAAMlG,SAAQ,SAACmG,GACbA,EAAKC,UAAW,EAChBD,EAAKE,YAAa,KAEpBrI,EAAMkF,WAAagD,EACnBlI,EAAMoB,UAAYA,EAClBpB,EAAMmF,eAAiB+C,EAAMrE,KAAI,SAACsE,GAAD,OAAUA,EAAKG,QAChDtI,EAAMoF,aAAe8C,EAAMrE,KAAI,SAACsE,GAAD,OAAUA,EAAKG,QAC1CR,EAAOC,QAAQzC,YAAWtF,EAAMsF,UAAYwC,EAAOC,QAAQzC,WAC/DtF,EAAMqF,UAAYvD,MAAMC,KAAK,IAAIwG,IAAIL,EAAMrE,KAAI,SAACsE,GAAD,OAAUA,EAAKK,cAE/DX,QAAQhB,GAAgB4B,UAAU,SAACzI,EAAO8H,GACzC9H,EAAMF,SAAU,EAChBE,EAAM8F,SAAWgC,EAAOC,QC1GT,SAACW,EAAiBC,GACrC,OAAQA,GACN,IAAK,SACHC,KAAQC,OAAOH,EAAS,CAAEI,SAAU,IACpC,MACF,IAAK,UACHF,KAAQG,QAAQL,EAAS,CAAEI,SAAU,IACrC,MACF,IAAK,QACHF,KAAQI,QAAQN,EAAS,CAAEI,SAAU,KDkGrCG,CAAMjJ,EAAM8F,SAAU,YAEvB+B,QAAQN,GAAcU,WAAW,SAACjI,EAAO8H,GAAY,IACtCI,EAAUJ,EAAOC,QAAvBhH,KACRmH,EAAMlG,SAAQ,SAACmG,GACbA,EAAKC,UAAW,EAChBD,EAAKE,YAAa,KAEpBrI,EAAMkF,WAAagD,EACnBlI,EAAMmF,eAAiB+C,EAAMrE,KAAI,SAACsE,GAAD,OAAUA,EAAKG,QAChDtI,EAAMoF,aAAe8C,EAAMrE,KAAI,SAACsE,GAAD,OAAUA,EAAKG,QAC9CtI,EAAMqF,UAAYvD,MAAMC,KAAK,IAAIwG,IAAIL,EAAMrE,KAAI,SAACsE,GAAD,OAAUA,EAAKK,cAE/DX,QAAQ3B,IAAc,SAAClG,GACtBA,EAAMyF,QAAUzF,EAAMyF,UAEvBoC,QAAQxB,IAAgB,SAACrG,EAAO8H,GACR,QAAnBA,EAAOC,QACT/H,EAAMoF,aAAepF,EAAMkF,WAAWrB,KAAI,SAAClE,GAAD,OAAQA,EAAG2I,QAErDtI,EAAMoF,aAAepF,EAAMkF,WAAWhD,QACpC,SAACvC,GAAD,OAAQA,EAAG6I,QAAUV,EAAOC,WAC5BlE,KAAI,SAAClE,GAAD,OAAQA,EAAG2I,WAEpBT,QAAQvB,IAAkB,SAACtG,EAAO8H,GACjC,IAAMK,EAAOnI,EAAMkF,WAAWxF,MAAK,SAACC,GAAD,OAAQA,EAAG2I,OAASR,EAAOC,WAC1DI,IACFA,EAAKE,YAAa,EAClBF,EAAKC,UAAYD,EAAKC,aAGzBP,QAAQtB,IAAkB,SAACvG,EAAO8H,GACjC,IAAMK,EAAOnI,EAAMkF,WAAWxF,MAAK,SAACC,GAAD,OAAQA,EAAG2I,OAASR,EAAOC,WAC1DI,IACFA,EAAKC,UAAW,EAChBD,EAAKE,YAAcF,EAAKE,eAG3BR,QAAQpB,IAAgB,SAACzG,EAAO8H,GAC/B,IAAMlC,EAAckC,EAAOC,QAC3B/H,EAAM4F,YAAcA,EAChBA,IAAgBhI,EAAYiI,MAC9B7F,EAAMmF,eAAiBnF,EAAMkF,WAAWrB,KAAI,SAAClE,GAAD,OAAQA,EAAG2I,SACrD1C,IAAgBhI,EAAYwK,WAC9BpI,EAAMmF,eAAiBnF,EAAMkF,WAAWhD,QAAO,SAACvC,GAAD,OAAQA,EAAGyI,YAAUvE,KAClE,SAAClE,GAAD,OAAQA,EAAG2I,SAEX1C,IAAgBhI,EAAYsL,WAC9BlJ,EAAMmF,eAAiBnF,EAAMkF,WAAWhD,QAAO,SAACvC,GAAD,OAAQA,EAAG0I,cAAYxE,KACpE,SAAClE,GAAD,OAAQA,EAAG2I,YAGhBT,QAAQzB,IAAa,SAACpG,GACrBA,EAAM0F,SACJ1F,EAAM0F,WAAa/H,EAASgI,OAAShI,EAASwL,MAAQxL,EAASgI,UAElEkC,QAAQrB,IAAmB,SAACxG,EAAO8H,GACO,KAArCsB,OAAOC,OAAOvB,EAAOC,SAAS,UACzB/H,EAAMuF,gBAAgB6D,OAAOE,KAAKxB,EAAOC,SAAS,IACtD/H,EAAMuF,gBAAN,2BAA6BvF,EAAMuF,iBAAoBuC,EAAOC,YAEpEF,QAAQnB,IAAc,SAAC1G,EAAO8H,GACzBA,EAAOC,QAAQwB,SAAQvJ,EAAMwF,aAAesC,EAAOC,YAExDF,QAAQlB,IAAsB,SAAC3G,GAC9BA,EAAMuF,gBAAkB,MAEzBsC,QAAQjB,IAAe,SAAC5G,GAAW,IAAD,EACEA,EAA3BsF,EADyB,EACzBA,UAAWS,EADc,EACdA,aACnB/F,EAAQoJ,OAAOI,OAAOxJ,EAAOiF,KACvBK,UAAYA,EAClBtF,EAAM+F,YAAcA,KAErB0D,gBAAe,SAACzJ,GAAD,OAAWA,Q,oBEpFhB0J,GA5E4B,SAAC,GAAc,IAAD,EAAX3I,EAAW,EAAXA,KACtCwD,EAAWoF,cADsC,EAEzB5J,aAAY,SAACC,GAAD,OAAsBA,EAAMhC,UAA9DsH,EAF+C,EAE/CA,UAAWG,EAFoC,EAEpCA,OAFoC,EAGjBmE,mBAASnE,GAHQ,mBAGhDoE,EAHgD,KAGnCC,EAHmC,KAIjDC,EAAc7J,IAAGC,KAAO6J,sBAAR,mBACnB7J,KAAOiI,SAAWrH,EAAKqH,UADJ,cAEnBjI,KAAO+I,SAAWnI,EAAKsH,YAFJ,IAKtB,OACE,qBAAKpI,UAAWE,KAAO8J,aAAvB,SACE,eAAC,IAAD,CAAe5F,KAAMtD,EAAKuH,KAAM4B,uBAAwBL,EAAxD,UACE,sBAAK5J,UAAW8J,EAAhB,UACE,8CAAehJ,EAAKuH,KAApB,0BAA0CvH,EAAKoJ,OAA/C,qBAAkEpJ,EAAKyH,SACvE,gCACE,cAAC,IAAD,CAASvI,UAAWE,KAAO,+BAC3B,cAAC,IAAD,CACEF,UAAWE,KAAO,6BAClBiK,QAAS,kBAAM7F,EAAS+B,GAAiBvF,EAAKuH,UAEhD,cAAC,IAAD,CACErI,UAAWE,KAAO,6BAClBiK,QAAS,kBAAM7F,EAASgC,GAAiBxF,EAAKuH,UAEhD,cAAC,IAAD,UACE,cAAC,IAAD,CAAqB+B,MAAO,CAAEC,QAAS,QAAvC,SACE,cAAC,IAAD,CACErK,UAAWE,KAAO,6BAClBiK,QAAS,kBAAMN,GAAgBD,gBAMzC,cAAC,IAAD,UACE,qBAAK5J,UAAWE,KAAOoK,oBAAvB,SACE,kCACE,gCACE,+BACE,wCACA,yCACA,8CACA,6CAGJ,gCACGjF,EAAUzB,KAAI,SAAC2G,GACd,OAAOA,KAASzJ,EACd,+BACE,6BAAKQ,EAAWiJ,KAChB,6BACG9G,EAAU3C,EAAKyJ,GAAOC,SAAU1J,EAAKyJ,GAAOE,iBAE/C,6BACGhH,EAAU3C,EAAKyJ,GAAOE,cAAe3J,EAAKyJ,GAAOC,YAEpD,6BAAK1J,EAAKyJ,GAAOG,MAAQ,QAAU,eAR5BtG,eAWT,+BACE,6BAAK9C,EAAWiJ,KAChB,uBACA,uBACA,yBAJOnG,iC,oBCjFhBuG,GAAiB,SAACC,GAAD,MAA+C,CAC3EA,MAAM,GAAD,OAAKA,EAAL,QAGMC,GAAkB,SAC7BC,EACAF,GAEA,OAAIE,EAASC,QACJD,EAASC,QAAQC,aAAeF,EAASC,QAAQE,aACpDL,EACAA,EAAQ,EACPA,G,SC+BMM,GAlCuC,SAACC,GAAW,IACxDL,EAAkBK,EAAlBL,SAAUM,EAAQD,EAARC,IACV9F,EAA0D6F,EAA1D7F,gBAAiB+F,EAAyCF,EAAzCE,cAAeC,EAA0BH,EAA1BG,aAAcC,EAAYJ,EAAZI,QAEtD,OACE,qBACEvL,UAAWE,KAAO,6BAClBkK,MAAOO,GAAeE,GAAgBC,EAAUM,EAAII,WAFtD,SAIGH,GACCA,EAAcnH,SAASkH,EAAIK,UAC3BnG,GACAgG,GACE,qBAAKlB,MAAO,CAAEQ,MAAO,OAArB,SACE,cAAC,KAAD,CACEW,QAASA,GAAWA,EAAQH,EAAIK,SAChCC,MACEN,EAAIK,WAAWnG,EACX,CACEqG,MAAOrG,EAAgB8F,EAAIK,SAC3BC,MAAOpG,EAAgB8F,EAAIK,UAE7B,KAENG,aAAW,EACXC,cAAY,EACZC,SAAU,SAACC,GAAD,OA9BI,SAACX,EAAaE,GACxC,OAAO,SAACS,GAAD,OAAwBT,EAAaS,EAAOX,IA6BlBY,CAAoBZ,EAAKE,EAAzBU,CAAuCD,WCG3DE,GAjCmC,SAACd,GAAW,IAAD,IACnDC,EAA2DD,EAA3DC,IAAKc,EAAsDf,EAAtDe,WAAYpB,EAA0CK,EAA1CL,SAAUO,EAAgCF,EAAhCE,cAAe9F,EAAiB4F,EAAjB5F,aAElD,OACE,sBACEvF,UAAWE,KAAO,4BAClBkK,MAAOO,GAAeE,GAAgBC,EAAUM,EAAII,WAFtD,UAIE,4BAAIJ,EAAIK,UACPJ,GAAiBA,EAAcnH,SAASkH,EAAIK,UAAYS,GACvD,gCACE,cAAC,IAAD,CACElM,UAAWC,IAAGC,KAAO,aAAR,eACVA,KAAOiM,QACM,OAAZ5G,QAAY,IAAZA,GAAA,UAAAA,EAAc+D,cAAd,eAAsBmC,WAAYL,EAAIK,UACf,KAAX,OAAZlG,QAAY,IAAZA,OAAA,EAAAA,EAAc6G,QAElBjC,QAAS,kBAAM+B,EAAW,CAAE5C,OAAQ8B,EAAKgB,MAAM,OAEjD,cAAC,IAAD,CACEpM,UAAWC,IAAGC,KAAO,aAAR,eACVA,KAAOiM,QACM,OAAZ5G,QAAY,IAAZA,GAAA,UAAAA,EAAc+D,cAAd,eAAsBmC,WAAYL,EAAIK,UACf,KAAX,OAAZlG,QAAY,IAAZA,OAAA,EAAAA,EAAc6G,QAElBjC,QAAS,kBAAM+B,EAAW,CAAE5C,OAAQ8B,EAAKgB,MAAM,cCa5CC,GAtC2B,SAAClB,GAAW,IAC5CmB,EAA4BnB,EAA5BmB,QAASxL,EAAmBqK,EAAnBrK,KAAMgK,EAAaK,EAAbL,SACfxF,EAA0D6F,EAA1D7F,gBAAiBgG,EAAyCH,EAAzCG,aAAcC,EAA2BJ,EAA3BI,QAASF,EAAkBF,EAAlBE,cACxCkB,EAA0CpB,EAA1CoB,YAAaL,EAA6Bf,EAA7Be,WAAY3G,EAAiB4F,EAAjB5F,aAEjC,OACE,qCACE,qBAAKvF,UAAWE,KAAOsM,cAAvB,SACGF,EAAQ1I,KAAI,SAACwH,GAAD,OACX,cAAC,GAAD,CACEA,IAAKA,EAELN,SAAUA,EACVoB,WAAYA,EACZb,cAAeA,EACfkB,YAAaA,EACbhH,aAAcA,GALTnB,oBASX,qBAAKpE,UAAWE,KAAO,mBAAvB,SACGoM,EAAQ1I,KAAI,SAACwH,GAAD,OACX,cAAC,GAAD,CAEEtK,KAAMA,EACNgK,SAAUA,EACVO,cAAeA,EACfE,QAASA,EACTjG,gBAAiBA,EACjBgG,aAAcA,EACdF,IAAKA,GAPAhH,wBCuBFqI,GA7CyB,SAACtB,GAAW,IAC1CmB,EAA+DnB,EAA/DmB,QAASxL,EAAsDqK,EAAtDrK,KAAM4L,EAAgDvB,EAAhDuB,OAAQrB,EAAwCF,EAAxCE,cAAekB,EAAyBpB,EAAzBoB,YAAahB,EAAYJ,EAAZI,QACnDjG,EAA4D6F,EAA5D7F,gBAAiBgG,EAA2CH,EAA3CG,aAAcY,EAA6Bf,EAA7Be,WAAY3G,EAAiB4F,EAAjB5F,aAFF,EAGxBoE,oBAAS,GAAzBgD,EAHwC,oBAI3C7B,EAAW8B,iBAAuB,MAExCC,qBAAU,WACRF,GAAa,KACZ,CAAC7B,IAEJ,IAAMgC,EJDsB,SAACR,GAC7B,OAAOA,EAAQS,QAAO,SAACC,EAAKC,GAE1B,OADAD,EAAOC,EAAKzB,WAEX,GIHgB0B,CAAeZ,GAElC,OACE,sBAAKtM,UAAWE,KAAOgJ,MAAOkB,MAAOO,GAAemC,GAApD,UACE,cAAC,GAAD,CACER,QAASA,EACTxL,KAAMA,EACNgK,SAAUA,EACVO,cAAeA,EACfE,QAASA,EACTgB,YAAaA,EACbjH,gBAAiBA,EACjBgG,aAAcA,EACdY,WAAYA,EACZ3G,aAAcA,IAEhB,qBAAKvF,UAAWE,KAAOiN,YAAaC,IAAKtC,EAAzC,SACG3I,EAAMuK,GAAQ9I,KAAI,SAACpB,GAAD,OACjB,qBAAKxC,UAAWE,KAAO,mBAAvB,SACGoM,EAAQ1I,KAAI,SAACwH,GAAD,OACX,qBAEEpL,UAAWE,KAAO,wBAClBkK,MAAOO,GAAeE,GAAgBC,EAAUM,EAAII,WAHtD,SAKG1K,EAAKsK,EAAIK,SAASjJ,IAJd4B,mBAHqCA,wBCjC7CiJ,GAAa,SACxBvM,EACAwM,GAEA,IAAMC,EAA+B,GAErCpE,OAAOE,KAAKiE,GAAYvL,SAAQ,SAACuH,GAC/B,IAAMkE,EAAoB1M,EAAKwI,GAC5B1F,KAAI,SAAClE,EAAI+N,GAAL,OAAc/N,IAAO4N,EAAWhE,GAAUmE,GAAO,KACrDxL,QAAO,SAACvC,GAAD,OAAgB,IAARA,KAElB6N,EAAc9K,KAAK,IAAI6F,IAAIkF,OAG7B,IAAME,EAA4BhM,EAAe,WAAf,EAAmB6L,GAMrD,OAJApE,OAAOE,KAAKvI,GAAMiB,SAAQ,SAAC4L,GACzB7M,EAAK6M,GAAO7M,EAAK6M,GAAK1L,QAAO,SAACsF,EAAGkG,GAAJ,OAAYC,EAAgBxJ,SAASuJ,SAG7DC,EAAgBE,QAGZC,GAAW,SAAC/M,EAAyBsK,EAAagB,GAC7D,IAAM0B,EZOsB,SAC5BC,EACA3B,GAgBA,OAde2B,EACZnK,KAAI,SAAClE,EAAI+N,GAAL,sBAAiB/N,EAAK+N,MAC1BO,MAAK,SAACzJ,EAAG0J,GACR,OAAI9E,OAAOE,KAAK9E,GAAG,GAAK4E,OAAOE,KAAK4E,GAAG,GACjC7B,EAAa,GACT,EAENjD,OAAOE,KAAK9E,GAAG,GAAK4E,OAAOE,KAAK4E,GAAG,GACjC7B,GAAc,EACX,EAEF,KAGGxI,KAAI,SAAClE,GAAD,OAAQyJ,OAAOC,OAAO1J,GAAI,MYzBtBwO,CAAepN,EAAKsK,EAAIK,SAAUW,GAExDjD,OAAOE,KAAKvI,GAAMiB,SAAQ,SAAC4L,GAEzB,IADA,IAAMQ,EAAc,GACX3L,EAAQ,EAAGA,EAAQsL,EAAcF,OAAQpL,IAChD2L,EAAY1L,KAAK3B,EAAK6M,GAAKG,EAActL,KAE3C1B,EAAK6M,GAAOQ,MAIHC,GAAgB,SAACtN,EAAyBuN,GACrD,OAAOA,EAAKtB,QAAqB,SAACC,EAAKC,GAKrC,OAJAD,EAAIC,GAAQpL,MAAMC,KAAK,IAAIwG,IAAIxH,EAAKmM,KAAQrJ,KAAI,SAACsE,GAAD,MAAW,CACzDyD,MAAOzD,EACPwD,MAAOxD,MAEF8E,IACN,KCwBUsB,GAtD0B,SAAC,GAAc,IAAZxN,EAAW,EAAXA,KACpCwD,EAAWoF,cADoC,EAEA5J,aACnD,SAACC,GAAD,OAAsBA,EAAMhC,UADtBsH,EAF6C,EAE7CA,UAAWC,EAFkC,EAElCA,gBAAiBC,EAFiB,EAEjBA,aAI9B+G,EXWqB,SAACjH,GAAD,OAC3B,CAAEoG,QAAS,OAAQD,SAAU,KAC7B,CAAEC,QAAS,QAASD,SAAU,MAFH,mBAGxBnG,EAAUkJ,SAAQ,SAAChE,GACpB,MAAO,CACL,CAAEkB,QAASlB,EAAOiB,SAAU,KAC5B,CAAEC,QAAQ,WAAD,OAAalB,GAASiB,SAAU,WWjBnBgD,CAAcnJ,GAClCgG,EAAgB,CAAC,OAAQ,QAAS,eAAgB,gBAYpDoD,EXnBqB,SAAC3N,EAAwBuE,GAClD,IAAIoJ,EAAkC,CACpCpG,KAAMvH,EAAK8C,KAAI,SAACsE,GAAD,OAAUA,EAAKG,QAC9BE,MAAOzH,EAAK8C,KAAI,SAACsE,GAAD,OAAUA,EAAKK,UAWjC,OARAlD,EAAUtD,SAAQ,SAACwI,GAAW,IAAD,EAC3BkE,EAAY,2BACPA,GADO,uBAETlE,EAAQzJ,EAAK8C,KAAI,SAACsE,GAAD,uBAAUA,EAAKqC,UAAf,aAAU,EAAaC,aAF/B,gCAGED,GAAUzJ,EAAK8C,KAAI,SAACsE,GAAD,uBAAUA,EAAKqC,UAAf,aAAU,EAAaE,kBAH5C,OAOPgE,EWKYC,CAAY5N,EAAMuE,GACjCqH,EAAS5L,EAAK8M,OAGdzE,OAAOE,KAAK/D,GAAiBsI,SAC/BlB,EAASW,GAAWoB,EAAcnJ,IAGhCC,EAAa+D,aAAgCqF,IAAtBpJ,EAAa6G,MACtCyB,GAASY,EAAclJ,EAAa+D,OAAQ/D,EAAa6G,MAG3D,IAAMb,EAAU6C,GAAcK,EAAcpD,GAK5C,OXRwB,SACxBoD,EACAJ,GACI,IAAD,gBACeA,GADf,yBACQjD,EADR,QAEGwD,EAA2B,GAC3BC,EAA2B,GAE/B1M,EAAMsM,EAAarD,GAAKwC,QAAQ7L,SAAQ,SAACS,GACvC,IAAMgI,EAAWiE,EAAarD,GAAK5I,GAC7BiI,EAAgBgE,EAAa,WAAD,OAAYrD,IAAO5I,GACrDoM,EAAUnM,KAAKgB,EAAU+G,EAAUC,IACnCoE,EAAUpM,KAAKgB,EAAUgH,EAAeD,OAG1CiE,EAAarD,GAAOwD,EACpBH,EAAa,WAAD,OAAYrD,IAASyD,GAZnC,2BAAyB,IADtB,+BWGHC,CAAWL,EAAcpJ,GAGvB,qBAAKrF,UAAWE,IAAO6O,eAAvB,SACE,cAAC,GAAD,CACEzC,QAASA,EACTjB,cAAeA,EACfE,QAASA,EACTgB,YAlCc,CAAC,OAAQ,QAAS,eAAgB,gBAmChDzL,KAAM2N,EACN/B,OAAQA,EACRpH,gBAAiBA,EACjBgG,aApCiC,SAACS,EAAOX,GAClC9G,EAASiC,GAAhBwF,EAAkC,eAAGX,EAAIK,QAAUM,EAAML,OAC7B,eAAGN,EAAIK,QAAU,OAmC7CS,WAhC6B,SAAC3G,GAClCjB,EAASmC,GAAalB,KAgClBA,aAAcA,OC/BPyJ,GArBO,WAAO,IdWYC,EcXb,EACqCnP,aAC7D,SAACC,GAAD,OAAsBA,EAAMhC,UADtBmH,EADkB,EAClBA,eAAgBC,EADE,EACFA,aAAcF,EADZ,EACYA,WAAYQ,EADxB,EACwBA,SAI5CyJ,GdMiCD,EcNQ/J,EdOxCxD,EAAgB,IAAI4G,IcPMnD,GdOG,IAAImD,IAAI2G,KcNtCE,EAAelK,EAAWhD,QAAO,SAACnB,GAAD,OAAUoO,EAAYhL,SAASpD,EAAKuH,SAE3E,OAAO5C,IAAa/H,EAASgI,OAC3B,cAAC,IAAD,CAAW0J,uBAAqB,EAACC,mBAAiB,EAAlD,SACE,qBAAKrP,UAAWE,IAAOoP,YAAvB,SACGH,EAAavL,KAAI,SAAClE,GAAD,OAChB,cAAC,GAAD,CAAgCoB,KAAMpB,GAAd0E,sBAK9B,cAAC,GAAD,CAAiBtD,KAAMqO,K,sECLZI,GAZiB,SAAC,GAAkC,IAC7DzL,EAD6B0L,EAA+B,EAA/BA,KAAM9G,EAAyB,EAAzBA,KAAM+G,EAAmB,EAAnBA,aAK7C,OAHyB3L,EAAZ,aAAT4E,EAAiCxI,KAAOwP,eAC3BxP,KAAOyP,KAGtB,wBAAQ3P,UAAW8D,EAAWqG,QAASsF,EAAvC,SACGD,KC+GQI,GA5GM,WACnB,IhBtBgCC,EgBsB1BvL,EAAWoF,cADQ,EAEDC,mBAAsB,MAFrB,mBAElB3G,EAFkB,KAEZ8M,EAFY,OAarBhQ,aAAY,SAACC,GAAD,OAAsBA,EAAMhC,UAT1CyH,EAJuB,EAIvBA,OACAJ,EALuB,EAKvBA,UACAO,EANuB,EAMvBA,YACAL,EAPuB,EAOvBA,gBACAnE,EARuB,EAQvBA,UACAsE,EATuB,EASvBA,SACA5F,EAVuB,EAUvBA,QACAiG,EAXuB,EAWvBA,YACAb,EAZuB,EAYvBA,WAWF,OACE,sBAAKjF,UAAWC,IAAGC,IAAO6P,OAAQ,CAAE3P,aAAcP,IAAlD,UACE,sBAAKG,UAAWE,IAAO8P,aAAvB,UACE,cAACC,GAAA,EAAD,CACErF,MAAO,IACPW,QAAS,CACP,CAAEI,MAAO,MAAOD,MAAO/N,EAAYiI,KACnC,CAAE+F,MAAO,WAAYD,MAAO/N,EAAYwK,UACxC,CAAEwD,MAAO,cAAeD,MAAO/N,EAAYsL,WAE7CyC,MAAO/F,EACPmG,SAAU,SAACJ,GAAD,OAAWpH,EAASkC,GAAekF,OAE/C,sBAAK1L,UAAWE,IAAO,uBAAvB,UACE,gCACE,cAACgQ,GAAA,EAAD,CACEC,OAAQ,GACRC,SAAU5K,EACV6K,SAAU5K,IAAa/H,EAASwL,MAChC4C,SAAU,kBAAMxH,EAAS2B,SAE3B,4CAEF,gCACE,cAACiK,GAAA,EAAD,CACEC,OAAQ,GACRC,QAAS3K,IAAa/H,EAASwL,MAC/B4C,SAAU,kBAAMxH,EAAS6B,SAE3B,iDAhCDV,IAAa/H,EAASwL,OAASC,OAAOE,KAAK/D,GAAiBsI,OAAS,GAoCtE,yBACE5N,UAAWE,IAAO,4BAClBiK,QAAS,kBAAM7F,EAASoC,OAF1B,UAIE,iDACA,cAAC,KAAD,OA7C0B,IAA3BZ,EAAYE,YAAoBf,EAAW2I,OAAS9H,EAAYE,YAiDjE,sBAAKhG,UAAWE,IAAO,uBAAvB,UACE,8BACE,cAAC,IAAD,CAAWiK,QAAS,kBAAM7F,EAASgD,WAErC,gCACE,uCACA,8CAKR,sBAAKtH,UAAWE,IAAOoQ,cAAvB,UACE,eAACC,GAAA,EAAD,CAAQzE,SAAU,SAAC0E,GAAD,OAAOlM,EAAS8B,GAAeoK,EAAEC,OAAO/E,SAA1D,UACE,wBAAQA,MAAM,MAAd,qBACCtG,EAAUxB,KAAI,SAAC8M,EAAIC,GAAL,OACb,wBAAQjF,MAAOgF,EAAf,SACGA,GADqBC,SAK5B,sBAAK3Q,UAAWE,IAAO,4BAAvB,UACE,mDACA,6BhB5GwB2P,EgB4GF1O,EhB3GvB,IAAI8F,MAAM4I,GAAGe,eAAiB,IAAM,IAAI3J,MAAM4I,GAAGgB,2BgB6GlD,cAACC,GAAA,EAAD,CACEC,UAAU,EACVnG,MAAO,IACPoG,YAAY,wBACZC,YAAY,SACZnF,SAAU,SAACoF,GAAD,OAAcpB,EAAQoB,EAAS,OAE3C,cAAC,GAAD,CACE1B,KAAK,SACL9G,KAAK,WACL+G,aAAc,kBACZzM,GAAQsB,EAASsC,GAAgB,CAAEI,WAAW,EAAOhE,oB,+BCxGlDmO,GATiB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjC,OACE,sBAAKpR,UAAWE,KAAOC,UAAvB,UACE,cAACkR,GAAA,EAAD,CAAShH,QAAQ,OAAOiH,WAAW,SAASC,eAAe,SAASC,KAAM,KAC1E,4BAAIJ,Q,UCqBKK,GAzB0B,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAY1L,EAAiB,EAAjBA,WAAiB,EACzC2D,oBAAS,GADgC,mBAChEgI,EADgE,KACvDC,EADuD,KAGvE/E,qBAAU,WACJ6E,EAAa,GAAK1L,EAAa,GACjC4L,GAAW,KAEZ,CAACF,EAAY1L,IAEhB,IACM6L,EAAW,UAAM7L,EAAN,yCACX0L,EADW,yBAGjB,OACE,cAACI,GAAA,EAAD,CACE5S,MANU,6BAOVyS,QAASA,EACTI,WAAW,EACXC,gBAAiB,kBAAMJ,GAAW,IAJpC,SAMGC,KCwBQI,GA1CI,WACjB,IAeIC,EAfE5N,EAAWoF,cADM,EAQnB5J,aAAY,SAACC,GAAD,OAAsBA,EAAMhC,UAJ1C8B,EAJqB,EAIrBA,QACAoF,EALqB,EAKrBA,WACee,EANM,EAMrBF,YAAeE,WACfH,EAPqB,EAOrBA,SA2BF,OAxBAgH,qBAAU,WACkB,IAAtB5H,EAAW2I,QACbtJ,EAASsC,GAAgB,CAAE5D,KAAM,KAAMgE,WAAW,OAEnD,IAKCkL,EAFArS,EACEoF,EAAW2I,OAAS,EACV,cAAC,GAAD,CAAQwD,QAAO,mBAAcpL,EAAd,iBAEf,cAAC,GAAD,CAAQoL,QAAQ,6BAI5B,eAAC,IAAMe,SAAP,YACItM,GACA,cAAC,GAAD,CAAiBG,WAAYA,EAAY0L,WAAYzM,EAAW2I,SAElE,cAAC,GAAD,OAMJ,sBAAK5N,UAAWE,IAAOuI,QAAvB,UACE,cAAC,GAAD,IACCyJ,O,ShB/CFpN,K,UAAAA,E,oBAAAA,E,gBAAAA,E,iBAAAA,Q,cAOAC,K,oBAAAA,E,YAAAA,E,gBAAAA,E,WAAAA,Q,KAOE,IAcKqN,GAdCC,IAAuC,qBACjDtN,GAAOuN,SAAWxN,GAAMyN,KADyB,eAEjDxN,GAAOyN,KAAO1N,GAAM2N,UAF6B,eAGjD1N,GAAO2N,OAAS5N,GAAM6N,QAH2B,eAIjD5N,GAAO6N,IAAM9N,GAAM+N,QAJ8B,IAOvCC,IAAQ,qBAClBhO,GAAMyN,IAAM,0BADM,eAElBzN,GAAM2N,SAAW,oBAFC,eAGlB3N,GAAM6N,OAAS,qBAHG,eAIlB7N,GAAM+N,OAAS,2BAJG,K,SAOTT,K,YAAAA,E,+BAAAA,E,2BAAAA,E,cAAAA,E,gCAAAA,E,0CAAAA,E,uBAAAA,E,+CAAAA,E,qCAAAA,E,eAAAA,Q,KiBrBL,ICPKW,GCIN/N,GAAwB,CAC5BlE,KAAM,GACNK,eAAWwN,EACX5I,MAAO,GACPiN,kBAAcrE,EACdsE,KAAM,YACNpT,SAAS,EACTyF,gBAAiB,GACjB4N,gBAAgB,GAGLC,GAAgBjN,YAAuB,oBACvCkN,GAAUlN,YAAqB,cAC/BmN,GAAUnN,YAAiC,cAC3CoN,GAAWpN,YAAa,eACxBK,GAAoBL,YAA8B,sBAElDqN,GAAY1M,YAAiB,eAAD,uCAAiB,WAAOC,GAAP,eAAAvC,EAAA,sEvBexDzD,EuBdmCgG,EvBgB5B/F,IAAMC,KAAN,UAAcL,EAAd,WAAgCG,GuBjBiB,cAClD+D,EADkD,yBAEjD,CAAE/D,KAAM+D,EAAS/D,KAAKA,KAAMK,UAAW0D,EAAS/D,KAAKK,YAFJ,iCvBc/B,IACzBL,IuBfwD,OAAjB,uDAoC1B0S,GA/BG9L,YAAc1C,IAAc,SAAC2C,GAC7CA,EACGC,QAAQ2L,GAAUxL,SAAS,SAAChI,GAC3BA,EAAMF,SAAU,KAEjB+H,QAAQ2L,GAAUvL,WAAW,SAACjI,EAAO8H,IACpC9H,EAAQoJ,OAAOI,OAAOxJ,EAAOiF,KACvBlE,KAAO+G,EAAOC,QAAQhH,KAC5Bf,EAAMoB,UAAY0G,EAAOC,QAAQ3G,UACjCpB,EAAMmT,gBAAiB,KAExBtL,QAAQuL,IAAe,SAACpT,EAAO8H,GAC9B9H,EAAMgG,MAAQ8B,EAAOC,WAEtBF,QAAQwL,IAAS,SAACrT,EAAO8H,GACxB9H,EAAMkT,KAAOpL,EAAOC,WAErBF,QAAQyL,IAAS,SAACtT,EAAO8H,GACxB9H,EAAMiT,aAAenL,EAAOC,WAE7BF,QAAQrB,IAAmB,SAACxG,EAAO8H,GACO,KAArCsB,OAAOC,OAAOvB,EAAOC,SAAS,UACzB/H,EAAMuF,gBAAgB6D,OAAOE,KAAKxB,EAAOC,SAAS,IACtD/H,EAAMuF,gBAAN,2BAA6BvF,EAAMuF,iBAAoBuC,EAAOC,YAEpEF,QAAQ0L,IAAU,SAACvT,GAClBA,EAAQoJ,OAAOI,OAAOxJ,EAAOiF,OAE9BwE,gBAAe,SAACzJ,GAAD,OAAWA,Q,oBCehB0T,GAhDkB,SAAC,GAAc,IAAZ3S,EAAW,EAAXA,KAC5BwD,EAAWoF,cACTpE,EAAoBxF,aAAY,SAACC,GAAD,OAAsBA,EAAM/B,MAA5DsH,gBACF+F,EAAgB,CACpB+G,GAASsB,cACTtB,GAASuB,iBACTvB,GAASwB,cACTxB,GAASyB,OAILvH,EH6BqB,WAC3B,IAAMwH,EAAuB,GAW7B,OAVAA,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAASnL,KAAMuE,SAAU,MACpDsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAASsB,cAAelI,SAAU,MAC7DsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAAS2B,YAAavI,SAAU,MAC3DsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAASyB,MAAOrI,SAAU,KACrDsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAASwB,cAAepI,SAAU,MAC7DsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAAS4B,mBAAoBxI,SAAU,MAClEsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAAS6B,UAAWzI,SAAU,MACzDsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAAS8B,qBAAsB1I,SAAU,MACpEsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAASuB,iBAAkBnI,SAAU,MAChEsI,EAAWrR,KAAK,CAAEgJ,QAAS2G,GAAS+B,MAAO3I,SAAU,KAC9CsI,EGzCStF,GACV4F,EH1BmB,SAACtT,GAC1B,IAD6C,EACvCuT,EAAwB,GADe,cAG1BvT,GAH0B,2BAGlCoH,EAHkC,QAIrCoM,GAAS,mBACZlC,GAASnL,MAAO,IAAIA,MAAO2J,gBADf,cAEZwB,GAASsB,cAAgBxL,EAAI,WAFjB,cAGZkK,GAAS2B,YAAc7L,EAAI,QAHf,cAIZkK,GAASuB,iBAAmBzL,EAAI,OAJpB,cAKZkK,GAAS8B,qBAAuBhM,EAAI,YAAgBqM,KAAK,OAL7C,cAMZnC,GAASwB,cAAgB,IANb,cAOZxB,GAASyB,MAAQ,IAPL,cAQZzB,GAAS6B,UAAY,IART,cASZ7B,GAAS4B,mBAAqB,IATlB,GAYTQ,EAAWtM,EAAKuM,SAEtBtL,OAAOE,KAAKmL,GAAUzS,SAAQ,SAACsG,GAC7B,IAAMqM,EAAmB,eAAQJ,GACjCI,EAAoBtC,GAASwB,eAAiBvL,EAC9CqM,EAAoBtC,GAASyB,OAASW,EAASnM,GAAT,MACtCqM,EAAoBtC,GAAS6B,WAAaO,EAASnM,GAAT,UAC1CqM,EAAoBtC,GAAS4B,oBAC3BQ,EAASnM,GAAT,mBAEFgM,EAAS5R,KAAKiS,OAvBlB,2BAA0B,IAHmB,8BA8B7C,OAAOL,EGJeM,CAAY7T,GAC5B2N,EHMmB,SAAC3N,GAC1B,IAAM8T,EAA+B,GAKrC,OAJAzL,OAAOC,OAAOgJ,IAAUrQ,SAAQ,SAAC0J,GAC/BmJ,EAAUnJ,GAAW3K,EAAK8C,KAAI,SAACsE,GAAD,OAAUA,EAAKuD,SAGxCmJ,EGZclG,CAAY0F,GAC7B1H,EAAS0H,EAAcxG,OAGvBzE,OAAOE,KAAK/D,GAAiBsI,SAC/BlB,EAASW,GAAWoB,EAAcnJ,IAGpC,IAAMuP,EHO0B,SAAC/T,GACjC,IAAMgU,EAAwC,GACxC/O,EAAQjF,EAAKsR,GAASwB,eAO5B,OALA7N,EAAMhE,SAAQ,SAACsG,GACbyM,EAAUzM,GAAQyM,EAAUzM,GAAQyM,EAAUzM,GAAQ,EAAI,KAGzCtC,EAAMnC,KAAI,SAACyE,GAAD,OAAUyM,EAAUzM,GAAM0M,cGfxCC,CAAmBvG,GAClCA,EAAa2D,GAAS+B,OAASU,EAG/B,IAAMtJ,EAAU6C,GAAcK,EAAcpD,GAEtC4J,EH4BkB,SAACxG,GACzB,IAEMyG,EAFYzG,EAAa2D,GAAS2B,aAEUnQ,KAAI,SAACsE,GACrD,IAAMiN,EAAQ9C,GAAcnK,GAC5B,OACE,sBACEkC,MAAO,CACLgL,gBAAgB,GAAD,OAAKtC,GAASqC,IAC7BE,QAAS,WACTF,MAAO,QAJX,SAOGjN,OAKD+M,EAAkD,eAAQxG,GAGhE,OAFAwG,EAAc7C,GAAS2B,aAAemB,EAE/BD,EGjDenG,CAAWL,GAMjC,OACE,qBAAKzO,UAAWE,KAAO6O,eAAvB,SACE,cAAC,GAAD,CACEjO,KAAMmU,EACNvI,OAAQA,EACRJ,QAASA,EACTjB,cAAeA,EACfE,QAASA,EACTD,aAbiC,SAACS,EAAOX,GAClC9G,EAASiC,GAAhBwF,EAAkC,eAAGX,EAAIK,QAAUM,EAAML,OAC7B,eAAGN,EAAIK,QAAU,OAY7CnG,gBAAiBA,OCiDVgQ,GApGE,WACf,IAAMhR,EAAWoF,cADI,EAEiB5J,aAAY,SAACC,GAAD,OAAsBA,EAAM/B,MAAtE+H,EAFa,EAEbA,MAAOlG,EAFM,EAENA,QAASsB,EAFH,EAEGA,UAFH,EAIGwI,mBAAsB,MAJzB,mBAId3G,EAJc,KAIR8M,EAJQ,KAKfyF,EAAgBxP,EAAMnC,KAAI,SAACyE,GAAD,MAAW,CAAEqD,MAAOrD,EAAMsD,MAAOtD,MAE3DoH,EAAY,uCAAG,4BAAAlL,EAAA,yDACdvB,EADc,0EAGSD,EAAaC,GAHtB,OAGXwS,EAHW,OAIjBlR,EAASiP,GAAU,CAAE3O,cAAe4Q,KAJnB,uDAMjBC,QAAQtO,MAAR,MANiB,4EAAH,qDAWZuO,EAAoB,uCAAG,iCAAAnR,EAAA,SAAAA,EAAA,6DACrBoR,EAAOxU,EADc,SAEJE,EAAgBsU,GAFZ,OAO3B,IALM9Q,EAFqB,OAGrB+Q,EAAOC,KAAKhR,EAAS/D,KAAKkC,MAC5B8S,EAAIF,EAAKhI,OACPmI,EAAQ,IAAIC,WAAWF,GAEtBA,KACLC,EAAMD,GAAKF,EAAKK,WAAWH,GAGvBI,EAXqB,kBAWC,IAAIjP,KAAK0O,GAClC/E,eACAnQ,MAAM,KACN8T,KAAK,KAdmB,YAcX,IAAItN,KAAK0O,GACtBQ,eACA1V,MAAM,SACN2V,OAAO,EAAG,GACV7B,KAAK,KAlBmB,SAoBrBvR,EAAO,IAAIqT,KAAK,CAACN,GAAQG,EAAU,CACvCxN,KAAM,sEAGF4N,EAAMC,OAAOC,IAAIC,gBAAgBzT,IACjCuB,EAAI3E,SAAS8W,cAAc,MAC/BtM,MAAMC,QAAU,OAClB9F,EAAEoS,KAAOL,EACT/R,EAAEqS,SAAWV,EACbtW,SAASiX,KAAKC,YAAYvS,GAC1BA,EAAEwS,QACFR,OAAOC,IAAIQ,gBAAgBV,GAC3B1W,SAASiX,KAAKI,YAAY1S,GAhCC,4CAAH,qDAoD1B,OACE,sBAAKvE,UAAWC,IAAGC,KAAO6P,OAAQ,CAAE3P,aAAcP,IAAlD,UACE,qBAAKG,UAAWE,KAAO8P,aAAvB,SACE,cAAC,KAAD,CACEzE,QAASgK,EACT3J,aAAW,EACXC,cAAY,EACZC,SAxBc,SACpB0E,IAQA,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAG9E,QACLpH,EAAS+O,GAAQ7C,EAAE9E,QACnBpH,EAAS8O,GAAQ,oBAEjB9O,EAAS8O,GAAQ,mBAcjB,sBAAKpT,UAAWE,KAAOoQ,cAAvB,UACE,cAAC,GAAD,CAAQd,KAAK,YAAY9G,KAAK,OAAO+G,aAAc,kBAAMnL,EAASgP,SAClE,cAACxC,GAAA,EAAD,CACEC,UAAU,EACVnG,MAAO,IACPoG,YAAY,wBACZC,YAAY,SACZnF,SAAU,SAACoF,GAAD,OAAcpB,EAAQoB,EAAS,OAE3C,cAAC,GAAD,CAAQ1B,KAAK,SAAS9G,KAAK,WAAW+G,aAAcA,IACpD,cAAC,GAAD,CACED,KAAK,iBACL9G,KAAK,WACL+G,aAAciG,WChBTwB,GA7EwB,SAAC,GAAoB,IAAD,EAAjBpW,EAAiB,EAAjBA,KAAMuH,EAAW,EAAXA,KAC1CmM,EAAW,GAD0C,cAGtC1T,GAHsC,IAGzD,2BAAyB,CAAC,IAAfoH,EAAc,QACvB,GAAIA,EAAKiP,KAAKjT,SAASmE,GAAO,CAC5BmM,EAAWtM,EAAKuM,SAASpM,GACzB,QANqD,8BAYzD,IAAM+O,EAAWtW,EAAKmB,QAAO,SAACiG,GAAD,OAAUA,EAAKiP,KAAKjT,SAASmE,MAE1D,OACE,sBAAKrI,UAAWE,KAAOmX,YAAvB,UACE,sBAAKrX,UAAWE,KAAOoX,sBAAvB,UACE,wCAAWjP,KACX,+BACE,+BACE,0CACA,gCAAO,IAAIpB,MAAO2J,oBAEpB,+BACE,gDACA,+BAAO4D,EAASP,eAElB,+BACE,iDACA,+BAAOO,EAASR,wBAElB,+BACE,2CACA,+BAAOQ,EAASX,WAElB,+BACE,2CACA,+BAAOuD,EAASxJ,kBAItB,qBAAK5N,UAAWuX,KAAYC,cAA5B,SACE,kCACE,gCACE,+BACE,gDACA,8CACA,yDACA,wDAGJ,gCACGJ,EAASxT,KAAI,SAACsE,GAAD,OACZ,+BACE,6BAAKA,EAAI,YACT,6BACE,sBACEkC,MAAO,CACLgL,gBAAiBtC,GAAST,GAAcnK,EAAI,SAC5CmN,QAAS,WACTF,MAAO,QAJX,SAOGjN,EAAI,WAGT,6BAAKA,EAAI,cACT,6BAAKA,EAAI,UAdF9D,6BCnBRqT,GAnCA,WACb,IAeIC,EAfEpT,EAAWoF,cADE,EAE2C5J,aAC5D,SAACC,GAAD,OAAsBA,EAAM/B,MADtB8C,EAFW,EAEXA,KAAMmS,EAFK,EAELA,KAAMD,EAFD,EAECA,aAAcnT,EAFf,EAEeA,QAASqT,EAFxB,EAEwBA,eAyB3C,OArBArG,qBAAU,WACR,IAAI9G,EAAkB,GACtBjF,EAAKiB,SAAQ,SAACmG,GACZnC,EAAK,sBAAOA,GAAP,YAAiBmC,EAAKiP,UAE7B,IAAMQ,EAAgB9V,MAAMC,KAAK,IAAIwG,IAAIvC,IACzCzB,EAAS6O,GAAcwE,MAEtB,CAAC7W,IAGAjB,EACF6X,EAAc,cAAC,GAAD,CAAQtG,QAAQ,qBACrBtQ,EAAK8M,OAAS,GACV,cAATqF,IAAsByE,EAAc,cAAC,GAAD,CAAS5W,KAAMA,KAC1C,mBAATmS,IACFyE,EAAc,cAAC,GAAD,CAAe5W,KAAMA,EAAMuH,KAAM2K,MACxB,IAAhBlS,EAAK8M,QAAiBsF,IAC/BwE,EAAc,oBAAI1X,UAAWE,KAAO0X,OAAtB,kCAId,sBAAK5X,UAAWE,KAAOuI,QAAvB,UACE,cAAC,GAAD,IACCiP,M,8BLzCK3E,K,UAAAA,E,QAAAA,E,eAAAA,Q,KMKZ,IAAM/N,GAA4B,CAChC6S,SAAU9E,GAAgB+E,GAC1BpM,MAAO,GACP5K,KAAM,GACNjB,SAAS,EACTqT,gBAAgB,EAChB6E,SAAU,MAGCC,GAAc9R,YAA8B,sBAC5C+R,GAAW/R,YAAqB,mBAEhCqN,GAAY1M,YAAiB,mBAAD,uCAAqB,WAAOU,EAAP,0BAAAhD,EAAA,6DAAYiD,EAAZ,EAAYA,SAAZ,EAC/BA,IAAyBvJ,OAA9C4Z,EADoD,EACpDA,SAAUnM,EAD0C,EAC1CA,MAD0C,S5B+B5DwM,E4B7BuC,CAAEL,WAAUnM,S5B+B5C3K,IAAMK,IAAN,UACFT,EADE,gCAC6BuX,EAAYL,SADzC,kBAC2DK,EAAYxM,Q4BlClB,cAEtD7G,EAFsD,yBAGrD,CAAE/D,KAAM+D,EAAS/D,KAAKqX,UAH+B,iC5B8B/B,IAC7BD,I4B/B4D,OAArB,yDAM5BE,GAAgBvR,YAAiB,uBAAD,sBAAyB,4BAAAtC,EAAA,sE5BiC7DxD,IAAMK,IAAN,UAAaT,EAAb,qB4BjC6D,cAC9DkE,EAD8D,yBAE7DA,EAAS/D,MAFoD,4CA2BvDuX,GAtBO3Q,YAAc1C,IAAc,SAAC2C,GACjDA,EACGC,QAAQoQ,IAAa,SAACjY,EAAO8H,GAC5B9H,EAAM8X,SAAWhQ,EAAOC,WAEzBF,QAAQqQ,IAAU,SAAClY,EAAO8H,GACzB9H,EAAM2L,MAAQ7D,EAAOC,WAEtBF,QAAQ2L,GAAUxL,SAAS,SAAChI,GAC3BA,EAAMF,SAAU,KAEjB+H,QAAQ2L,GAAUvL,WAAW,SAACjI,EAAO8H,GACpC9H,EAAMe,KAAO+G,EAAOC,QAAQhH,KAC5Bf,EAAMF,SAAU,EAChBE,EAAMmT,gBAAiB,KAExBtL,QAAQwQ,GAAcpQ,WAAW,SAACjI,EAAO8H,GACxC9H,EAAMgY,SAAWlQ,EAAOC,WAEzB0B,gBAAe,SAACzJ,GAAD,OAAWA,Q,oBCwChBuY,GA5EM,WACnB,I5BRkCzI,E4BQ5BvL,EAAWoF,cADQ,EAEe5J,aAAY,SAACC,GAAD,OAAsBA,EAAM9B,UAAxE4Z,EAFiB,EAEjBA,SAAUhY,EAFO,EAEPA,QAASkY,EAFF,EAEEA,SAErBQ,EAAe,CACnB,CAAE5M,MAAO,eAAgBD,MAAOqH,GAAgB+E,IAChD,CAAEnM,MAAO,eAAgBD,MAAOqH,GAAgByF,KAChD,CAAE7M,MAAO,uBAAwBD,MAAOqH,GAAgB0F,QAGpDzH,EAAc,kBAEpB,OACE,sBAAKhR,UAAWC,IAAGC,KAAOwY,gBAAiB,CAAEtY,aAAcP,IAA3D,UACE,sBAAKG,UAAWE,KAAO,wBAAvB,UACE,cAACyY,GAAA,EAAD,CACEjN,MAAOmM,EACPtM,QAASgN,EACT/G,KAAM,GACN7F,MAAM,mBACNG,SAAU,SAAC0E,GAAD,OAAOlM,EAAS0T,GAAYxH,EAAEC,OAAO/E,WAEjD,gCACE,cAACkN,GAAA,EAAD,CACE/G,YAAY,oBACZb,YAAY,iBACZpG,MAAO,IACPkB,SAAU,SAAC0E,GAAD,OACRlM,EAAS2T,GAASzH,EAAEC,OAAO/E,WAG/B,cAAC,GAAD,CACE8D,KAAK,aACL9G,KAAK,WACL+G,aAAc,kBAAMnL,EAASiP,eAInC,sBAAKvT,UAAWE,KAAO,yBAAvB,UACE,gCACE,oDACA,4BACG6X,G5BjDuBlI,E4BkDA,IAAI5I,KAAK8Q,EAAQ,cAAR,W5BjDpClI,EAAEe,eAAiB,IAAMf,EAAEgB,sB4BkDpBG,OAGR,gCACE,6CACA,4BACG+G,EAAQ,UACFA,EAAQ,OAAR,OAA6Bc,iBAD3B,YAEL7H,OAGR,gCACE,6CACA,4BACG+G,EAAQ,UACFA,EAAQ,OAAR,QAA8Bc,iBAD5B,YAEL7H,OAGR,gCACE,qDACA,4BACG+G,EAAQ,UACFA,EAAQ,OAAR,UAAgCc,iBAD9B,YAEL7H,cCvCD8H,GA9BsB,SAAC,GAAc,IAAZhY,EAAW,EAAXA,KAClCwL,EAAUnD,OAAOE,KAAKvI,EAAK,IAE/B,OACE,sBAAKd,UAAWE,KAAO6Y,mBAAvB,UACE,kCACE,gCACE,+BACE,yCACCjY,EAAK8C,KAAI,SAAC2D,EAAGyR,GAAJ,OACR,yCAAyBA,EAAI,IAApB5U,uBAIf,gCACGkI,EAAQ1I,KAAI,SAACwH,GAAD,OACX,+BACE,6BAAKA,IACJtK,EAAK8C,KAAI,SAAC2D,EAAGyR,GAAJ,OACR,6BAAkBlY,EAAKkY,GAAG5N,IAAjBhH,oBAHJA,uBAZjB,QCdW,OAA0B,uCCoC1B6U,GA1BI,WACjB,IAAM3U,EAAWoF,cACTqO,EAAajY,aAAY,SAACC,GAAD,OAAsBA,EAAM9B,UAArD8Z,SAERlL,qBAAU,WACHkL,GAAUzT,EAAS8T,QAEvB,IAPoB,IAanBc,EAbmB,EASmBpZ,aACxC,SAACC,GAAD,OAAsBA,EAAM9B,UADtB6C,EATe,EASfA,KAAMjB,EATS,EASTA,QAASqT,EATA,EASAA,eASvB,OAJIrT,EAASqZ,EAAmB,cAAC,GAAD,CAAQ9H,QAAQ,qBACvCtQ,EAAK8M,OAAS,EAAGsL,EAAmB,cAAC,GAAD,CAAapY,KAAMA,IACtDoS,IAAgBgG,EAAmB,qBAAK7Y,IAAK8Y,GAAW5Y,IAAI,gBAGpE,sBAAKP,UAAWE,KAAOuI,QAAvB,UACE,cAAC,GAAD,IACA,qBAAKzI,UAAWE,KAAOkZ,eAAvB,SAAwCF,Q,UC/B/B,OAA0B,gD,oBCkE1BG,GApDC,WAAO,IACbxZ,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMhC,UAApD8B,QAER,OACE,sBAAKG,UAAWC,IAAGC,KAAOoZ,QAAS,CAAElZ,aAAcP,IAAnD,UACE,+BACE,6BACE,gCACE,cAAC,IAAD,CAAUG,UAAWE,KAAOqZ,OAC5B,6BACE,cAAC,IAAD,CAAMC,GAAI1b,EAAOC,OAAjB,gCAIN,6BACE,gCACE,cAAC,IAAD,CAAeiC,UAAWE,KAAOqZ,OACjC,6BACE,cAAC,IAAD,CAAMC,GAAI1b,EAAOE,GAAjB,4BAIN,6BACE,gCACE,cAAC,IAAD,CAAcgC,UAAWE,KAAOqZ,OAChC,6BACE,cAAC,IAAD,CAAMC,GAAI1b,EAAOG,OAAjB,iCAIN,6BACE,gCACE,cAAC,KAAD,CAAkB+B,UAAWE,KAAOqZ,OACpC,6BACE,cAAC,IAAD,CAAMC,GAAI1b,EAAOI,IAAjB,wBAIN,6BACE,gCACE,cAAC,IAAD,CAAe8B,UAAWE,KAAOqZ,OACjC,6BACE,cAAC,IAAD,CAAMC,GAAI1b,EAAOK,UAAjB,iCAKR,qBAAKkC,IAAKoZ,GAAazZ,UAAWE,KAAOwZ,KAAMnZ,IAAI,sB,SCrD1CoZ,GARW,WACxB,OACE,8BACE,uECsCSC,GA9BH,WACV,IAAMC,ECWoB,SAAC,GAA+C,IACtEC,EACAC,EAFyBC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,QAI1C,IACE,IAAKD,IAAgBC,EAEnB,OADAxE,QAAQyE,IAAI,uBACL,EAETJ,EAAqBK,aAAWH,GAChCD,EAAiBI,aAAWF,GAC5B,SAEA,OADAxE,QAAQyE,IAAI,wBACL,EAMT,OAHAzE,QAAQyE,IAAIJ,GACZrE,QAAQyE,IAAIH,IAEL,ED9BSK,CCLM,WACtB,IAAIJ,EACAC,EAEJ,IACED,EAAc,IAAIK,gBAAgB9D,OAAOjX,SAASgb,MAAMlZ,IAAI,gBAC5D6Y,EAAU,IAAII,gBAAgB9D,OAAOjX,SAASgb,MAAMlZ,IAAI,aACxD,SACA4Y,EAAc,IAAIK,gBAAgB9D,OAAOjX,SAASgb,MAAMlZ,IAAI,iBAC5D6Y,EAAU,IAAII,gBAAgB9D,OAAOjX,SAASgb,MAAMlZ,IAAI,YAI1D,OADAqU,QAAQyE,IAAIF,EAAaC,GAClB,CAAED,cAAaC,WDROM,IAEvBC,EACJ,cAAC,IAAD,UACE,sBAAKxa,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,UAAf,SACE,cAAC,GAAD,MAEF,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAOya,KAAM3c,EAAOC,OAAQ2c,OAAK,EAAjC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAM3c,EAAOE,GAApB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOyc,KAAM3c,EAAOG,OAApB,SACE,cAAC,GAAD,cAOV,OAAO4b,EAAUW,EAAgB,cAAC,GAAD,K,SEjC7BG,GAAcC,aAAgB,CAClC7c,OAAQ0J,GACRzJ,GAAIwV,GACJvV,OAAQoa,KASKwC,GAJDC,YAAe,CAC3BC,QAASJ,KCNXK,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFjb,SAASsb,eAAe,U,mBCX1B1d,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,cAAgB,iCAAiC,2BAA2B,4CAA4C,YAAY,6BAA6B,OAAS,0BAA0B,4BAA4B,6CAA6C,YAAc,+BAA+B,kBAAkB,mCAAmC,uBAAuB,0C,mBCAzbD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,mBAAqB,mCAAmC,aAAe,6BAA6B,oBAAsB,oCAAoC,qBAAuB,qCAAqC,SAAW,yBAAyB,SAAW,yBAAyB,4BAA4B,4C,mBCA9XD,EAAOC,QAAU,CAAC,QAAU,oBAAoB,eAAiB,2BAA2B,OAAS,mBAAmB,aAAe,yBAAyB,cAAgB,0BAA0B,YAAc,wBAAwB,sBAAwB,kCAAkC,OAAS,qB,mBCAnTD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,wB,mBCAzFD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,gBAAkB,gCAAgC,uBAAuB,qCAAqC,wBAAwB,sCAAsC,eAAiB,iC,mBCAjPD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,WAAa,2BAA2B,SAAW,yBAAyB,MAAQ,wB,wCCA5ID,EAAOC,QAAU,CAAC,KAAO,sBAAsB,eAAiB,mC","file":"static/js/main.2042cfa6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loader_container__iNL1U\",\"progressBar\":\"loader_progressBar__3yZFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"scrape_content__3rwv4\",\"header\":\"scrape_header__2WWw8\",\"header__left\":\"scrape_header__left__2nU6T\",\"header__left-switch\":\"scrape_header__left-switch__YGPnp\",\"header__left-reload\":\"scrape_header__left-reload__20z7S\",\"header__left-clearButton\":\"scrape_header__left-clearButton__2UQ_V\",\"header__right\":\"scrape_header__right__g6UT2\",\"header__right-updateTime\":\"scrape_header__right-updateTime__i2f-x\",\"dataContent\":\"scrape_dataContent__1nHMO\",\"tableContainer\":\"scrape_tableContainer__3X95n\",\"matchingText\":\"scrape_matchingText__SGilL\",\"unMatchingText\":\"scrape_unMatchingText__273Km\"};","import { FilterTableCols, SortTableCol } from \"./flexTypes\";\r\n\r\n// Scrape data definitions ----------------\r\ninterface FieldProperties {\r\n  uv_value: string;\r\n  scraped_value: string;\r\n  match: boolean;\r\n}\r\n\r\ninterface NonCommonFields {\r\n  [key: string]: FieldProperties;\r\n}\r\n\r\ninterface AddedFields {\r\n  finished: boolean;\r\n  onProgress: boolean;\r\n}\r\n\r\ninterface CommonFields {\r\n  kfid: string;\r\n  url: string;\r\n  ra_id: string;\r\n  ref_no: string;\r\n}\r\n\r\nexport type ScrapeDataType = NonCommonFields & CommonFields & AddedFields;\r\n\r\n// Request, Response definitions ----------------\r\nexport interface ValidationRequest {\r\n  uploaded_file: string;\r\n}\r\n\r\nexport interface ValidationResponse {\r\n  numRecords: number;\r\n  kfids: string[];\r\n}\r\n\r\nexport interface ScrapeRequest {\r\n  uploaded_file: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport interface ScrapeDataInitResponse {\r\n  data: ScrapeDataType[];\r\n  fieldList: string[];\r\n  timestamp: number;\r\n}\r\n\r\nexport interface ScrapeDataResponse {\r\n  data: ScrapeDataType[];\r\n}\r\n\r\n// State definition --------------\r\nexport interface ScrapeState {\r\n  ScrapeData: ScrapeDataType[];\r\n  timestamp: number;\r\n  filteredByView: string[];\r\n  filteredByRA: string[];\r\n  uniqueRAs: string[];\r\n  fieldList: string[];\r\n  expand: boolean;\r\n  dataView: DataView;\r\n  filterState: FilterState;\r\n  filterTableCols: FilterTableCols;\r\n  sortTableCol: SortTableCol;\r\n  loading: boolean;\r\n  ErrorMsg: string | null;\r\n  fileDetails: ValidationResponse;\r\n}\r\n\r\n// UI type defs -----------------\r\nexport enum DataView {\r\n  single = \"single\",\r\n  table = \"table\",\r\n}\r\n\r\nexport enum FilterState {\r\n  all = \"all\",\r\n  progress = \"progress\",\r\n  finished = \"finished\",\r\n}\r\n","export default __webpack_public_path__ + \"static/media/gleif-logo-full.734f0821.png\";","export default __webpack_public_path__ + \"static/media/LSEG_LOGO_RGB_GWB_0.05bc91bc.png\";","const rootPath = \"/\";\r\nconst sopRootPath = \"sop\";\r\n\r\nconst routes = {\r\n  scrape: `${rootPath}`,\r\n  dq: `${rootPath}dqtool`,\r\n  concat: `${rootPath}concat`,\r\n  sop: `${rootPath}sop`,\r\n  analytics: `${rootPath}analytics`,\r\n  sopSubRoutes: {\r\n    PensionScheme: `${rootPath}${sopRootPath}/pension`,\r\n    Trust: `${rootPath}${sopRootPath}/trust`,\r\n    Company: `${rootPath}${sopRootPath}/company`,\r\n    Charity: `${rootPath}${sopRootPath}/charity`,\r\n    Funds: `${rootPath}${sopRootPath}/funds`,\r\n    RAList: `${rootPath}${sopRootPath}/ralist`,\r\n    ELFCode: `${rootPath}${sopRootPath}/elfcode`,\r\n    OnHoldText: `${rootPath}${sopRootPath}/onholdtext`,\r\n    Procedures: `${rootPath}${sopRootPath}/procedures`,\r\n    ImportantRequestor: `${rootPath}${sopRootPath}/requesters`,\r\n    ValidationDoc: `${rootPath}${sopRootPath}/validationdocs`,\r\n  },\r\n};\r\n\r\nexport default routes;\r\n","import cx from \"classnames\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport gleifLogo from \"../../images/gleif-logo-full.png\";\r\nimport lsegLogo from \"../../images/LSEG_LOGO_RGB_GWB_0.png\";\r\nimport routes from \"../../routes\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport styles from \"../../styles/header.module.scss\";\r\nimport \"../../styles/_global.scss\";\r\n\r\nconst titleMap = [\r\n  {\r\n    route: routes.scrape,\r\n    title: \"Scrape Tool\",\r\n    subtitle: \"Scraping RAs\",\r\n    browserTitle: \"LEI  |  Scrape\",\r\n  },\r\n  {\r\n    route: routes.dq,\r\n    title: \"DQ Tool\",\r\n    subtitle: \"Validate LEIs\",\r\n    browserTitle: \"LEI  |  DQ\",\r\n  },\r\n  {\r\n    route: routes.concat,\r\n    title: \"Concat Tool\",\r\n    subtitle: \"Search through GLEIF Files\",\r\n    browserTitle: \"LEI  |  Concat\",\r\n  },\r\n  {\r\n    route: routes.sop,\r\n    title: \"SOP Tool\",\r\n    subtitle: \"Standard Operating Procedure\",\r\n    browserTitle: \"LEI  |  SOP\",\r\n  },\r\n  {\r\n    route: routes.analytics,\r\n    title: \"Analytics Tool\",\r\n    subtitle: \"Analyse performance\",\r\n    browserTitle: \"LEI  |  Analytics\",\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  let location = useLocation();\r\n  const headerObj = titleMap.find((el) => location.pathname === el.route);\r\n\r\n  // update document title\r\n  document.title = headerObj!.browserTitle;\r\n\r\n  const { loading } = useSelector((state: RootState) => state.scrape);\r\n\r\n  return (\r\n    <div className={cx(styles.container, { blockElement: loading })}>\r\n      <img src={gleifLogo} alt=\"glief logo\" className={styles.glief_logo} />\r\n      <div className={styles.title}>\r\n        <h1>\r\n          <span>{headerObj?.title.split(\" \")[0]}</span> {headerObj?.title.split(\" \")[1]}\r\n        </h1>\r\n        <h4>{headerObj?.subtitle}</h4>\r\n      </div>\r\n      <img src={lsegLogo} alt=\"LSEG logo\" className={styles.lsegLogo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport {\r\n  ScrapeDataInitResponse,\r\n  ScrapeDataResponse,\r\n  ScrapeRequest,\r\n  ValidationRequest,\r\n  ValidationResponse,\r\n} from \"../models/scrapeTypes\";\r\nimport { DQRequestBody, DQResponseBody, DQExcelResponse } from \"../models/dqTypes\";\r\nimport { RequestParams, ResponseBody, ConcatInitResponse } from \"../models/concatTypes\";\r\n\r\nconst address = process.env.REACT_APP_URL;\r\n\r\nexport const checkScrapeValidation = (\r\n  data: ValidationRequest\r\n): Promise<AxiosResponse<ValidationResponse>> => {\r\n  return axios.post(`${address}/lei/scrape/validation`, data);\r\n};\r\n\r\nexport const fetchScrapeInitData = (): Promise<AxiosResponse<ScrapeDataInitResponse>> => {\r\n  return axios.get(`${address}/lei/scrape/init`);\r\n};\r\n\r\nexport const postScrapeRequest = (\r\n  data: ScrapeRequest\r\n): Promise<AxiosResponse<ScrapeDataResponse>> => {\r\n  return axios.post(`${address}/lei/scrape`, data);\r\n};\r\n\r\nexport const fetchScrapeRequestData = (\r\n  timestamp: number\r\n): Promise<AxiosResponse<ScrapeDataResponse>> => {\r\n  return axios.get(`${address}/lei/scrape?timestamp=${timestamp}`);\r\n};\r\n\r\nexport const fetchDQData = (\r\n  data: DQRequestBody\r\n): Promise<AxiosResponse<DQResponseBody>> => {\r\n  return axios.post(`${address}/lei/dq`, data);\r\n};\r\n\r\nexport const downloadDQExcel = (\r\n  timestamp: number\r\n): Promise<AxiosResponse<DQExcelResponse>> => {\r\n  return axios.get(`${address}/lei/dq/excel?timestamp=${timestamp}`);\r\n};\r\n\r\nexport const fetchConcatData = (\r\n  queryParams: RequestParams\r\n): Promise<AxiosResponse<ResponseBody>> => {\r\n  return axios.get(\r\n    `${address}/lei/concat?fileType=${queryParams.fileType}&value=${queryParams.value}`\r\n  );\r\n};\r\n\r\nexport const fetchConcatInitData = (): Promise<AxiosResponse<ConcatInitResponse>> => {\r\n  return axios.get(`${address}/lei/concat/init`);\r\n};\r\n","export const convertToDTString = (d: number): string => {\n  return new Date(+d).toDateString() + \" \" + new Date(+d).toLocaleTimeString();\n};\n\nexport const convertDateToString = (d: Date): string => {\n  return d.toDateString() + \" \" + d.toLocaleTimeString();\n};\n\nexport const capitalize = (s: String): string => {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n};\n\nexport const setIntersection = <T>(...sets: Set<T>[]): T[] => {\n  let s1 = Array.from(sets[0]);\n\n  sets.slice(1).forEach((set) => {\n    s1 = s1.filter((el) => set.has(el));\n  });\n\n  return s1;\n};\n\nexport const intersection = <T>(s1: T[], s2: T[]): T[] => {\n  return setIntersection(new Set(s1), new Set(s2));\n};\n\nexport const range = (end: number, start = 0, step = 1): number[] => {\n  const seq: number[] = [];\n  for (let index = start; index < end; index += step) {\n    seq.push(index);\n  }\n  return seq;\n};\n\nexport const sortArrayIndex = <T extends string | number>(\n  arr: T[],\n  desc: boolean\n): number[] => {\n  const sorted = arr\n    .map((el, idx) => ({ [el]: idx }))\n    .sort((a, b) => {\n      if (Object.keys(a)[0] < Object.keys(b)[0]) {\n        if (desc) return 1;\n        return -1;\n      }\n      if (Object.keys(a)[0] > Object.keys(b)[0]) {\n        if (desc) return -1;\n        return 1;\n      }\n      return 0;\n    });\n\n  return sorted.map((el) => Object.values(el)[0]);\n};\n\nexport function promisifiedTimeout(interval: number) {\n  return new Promise((resolve) => setTimeout(resolve, interval));\n}\n\nexport function fileToBase64(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve((reader.result as string).split(\";base64,\")[1]);\n    reader.onerror = (err) => reject(err);\n  });\n}\n","import { v4 as uuid } from \"uuid\";\r\nimport styles from \"../../styles/scrape.module.scss\";\r\n\r\nexport const matchFunc = (val1: string, val2: string) => {\r\n  if (!val1 || !val2) {\r\n    if (!val1) return <div>None</div>;\r\n    return <div>{val1}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {val1.split(/[\\s,-/|_]/).map((word) => {\r\n        let classname = styles.unMatchingText;\r\n        if (\r\n          val2\r\n            .toLowerCase()\r\n            .replace(/[.,-]/g, \"\")\r\n            .includes(word.toLowerCase().replace(/[.,-]/g, \"\"))\r\n        ) {\r\n          classname = styles.matchingText;\r\n        }\r\n        return (\r\n          <span key={uuid()} className={classname}>\r\n            {word}{\" \"}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { setFileDetails } from \"../redux/scrape\";\nimport { range, fileToBase64, promisifiedTimeout } from \"./utils\";\nimport {\n  checkScrapeValidation,\n  fetchScrapeRequestData,\n  postScrapeRequest,\n} from \"./apiCalls\";\nimport { ScrapeDataType } from \"../models/scrapeTypes\";\nimport { Column, TableData } from \"../models/flexTypes\";\nimport { matchFunc } from \"../components/Scrape/matchFunc\";\nimport { AnyAction, ThunkDispatch } from \"@reduxjs/toolkit\";\nimport { AxiosError } from \"axios\";\nimport { APIErrorResponse } from \"../models/generalTypes\";\n\nexport const arrangeData = (data: ScrapeDataType[], fieldList: string[]) => {\n  let arrangedData: TableData<string> = {\n    kfid: data.map((item) => item.kfid),\n    ra_id: data.map((item) => item.ra_id),\n  };\n\n  fieldList.forEach((field) => {\n    arrangedData = {\n      ...arrangedData,\n      [field]: data.map((item) => item[field]?.uv_value),\n      [`scraped ${field}`]: data.map((item) => item[field]?.scraped_value),\n    };\n  });\n\n  return arrangedData;\n};\n\nexport const createColumns = (fieldList: string[]): Column[] => [\n  { colName: \"kfid\", colWidth: 120 },\n  { colName: \"ra_id\", colWidth: 120 },\n  ...fieldList.flatMap((field) => {\n    return [\n      { colName: field, colWidth: 200 },\n      { colName: `scraped ${field}`, colWidth: 200 },\n    ];\n  }),\n];\n\nexport const formatData = (\n  arrangedData: TableData<string | React.ReactNode>,\n  cols: string[]\n) => {\n  for (const col of cols) {\n    let elements1: JSX.Element[] = [];\n    let elements2: JSX.Element[] = [];\n\n    range(arrangedData[col].length).forEach((index) => {\n      const uv_value = arrangedData[col][index] as string;\n      const scraped_value = arrangedData[`scraped ${col}`][index] as string;\n      elements1.push(matchFunc(uv_value, scraped_value));\n      elements2.push(matchFunc(scraped_value, uv_value));\n    });\n\n    arrangedData[col] = elements1;\n    arrangedData[`scraped ${col}`] = elements2;\n  }\n};\n\nexport async function fetchScrapeRequests(\n  file: File,\n  timestamp: number,\n  dispatch: ThunkDispatch<unknown, unknown, AnyAction>\n) {\n  try {\n    const fileString = await fileToBase64(file);\n    const validationResponse = await validateScrapeData(fileString);\n    dispatch(setFileDetails(validationResponse));\n    const response = await postScrapeRequest({\n      uploaded_file: fileString,\n      timestamp,\n    });\n    return { data: response.data.data };\n  } catch (err) {\n    const error = err as AxiosError<APIErrorResponse>;\n    // if the error is a timeout generated from the API gateway\n    if (!error.response) {\n      await promisifiedTimeout(3000);\n      const response = await fetchScrapeRequestData(timestamp);\n      return { data: response.data.data };\n    }\n    throw err;\n  }\n}\n\nexport async function validateScrapeData(fileString: string) {\n  try {\n    const response = await checkScrapeValidation({ uploaded_file: fileString });\n    return response.data;\n  } catch (err) {\n    throw err;\n  }\n}\n","enum Color {\r\n  Red = \"Red\",\r\n  Burgundy = \"Burgundy\",\r\n  Orange = \"Orange\",\r\n  Yellow = \"Yellow\",\r\n}\r\n\r\nenum Impact {\r\n  Critical = \"Critical\",\r\n  High = \"High\",\r\n  Medium = \"Medium\",\r\n  Low = \"Low\",\r\n}\r\n\r\nexport const ImpactToColor: { [key: string]: Color } = {\r\n  [Impact.Critical]: Color.Red,\r\n  [Impact.High]: Color.Burgundy,\r\n  [Impact.Medium]: Color.Orange,\r\n  [Impact.Low]: Color.Yellow,\r\n};\r\n\r\nexport const colorObj = {\r\n  [Color.Red]: \"rgba(240, 16, 0, 0.95)\",\r\n  [Color.Burgundy]: \"rgb(157, 34, 53)\",\r\n  [Color.Orange]: \"rgb(240, 126, 55)\",\r\n  [Color.Yellow]: \"rgba(206, 152, 0, 0.65)\",\r\n};\r\n\r\nexport enum colNames {\r\n  \"Date\" = \"Date\",\r\n  \"ErrorCategory\" = \"Error Category\",\r\n  \"ErrorImpact\" = \"Error Impact\",\r\n  \"Owner\" = \"Owner\",\r\n  \"KeyFieldValue\" = \"Key Field Value\",\r\n  \"OfficialEntityName\" = \"Official Entity Name\",\r\n  \"LEIStatus\" = \"LEI Status\",\r\n  \"FieldsOrRelatedField\" = \"Fields or Related Field\",\r\n  \"ErrorDescription\" = \"Error Description\",\r\n  \"Count\" = \"Count\",\r\n}\r\n\r\nexport interface MetaData {\r\n  Owner: string;\r\n  OfficialEntityName: string;\r\n  LEIStatus: string;\r\n}\r\n\r\nexport interface DQItem {\r\n  errorType: string;\r\n  Impact: string;\r\n  Colour: Color;\r\n  KFID: string[];\r\n  errorColumn: string[];\r\n  error: string;\r\n  metadata: {\r\n    [kfid: string]: MetaData;\r\n  };\r\n}\r\n\r\nexport interface DQResponseBody {\r\n  timestamp: number;\r\n  data: DQItem[];\r\n}\r\n\r\nexport interface DQRequestBody {\r\n  uploaded_file: string;\r\n}\r\n\r\nexport type DQView = \"SingleKFIDView\" | \"TableView\";\r\n\r\nexport interface FilterTableCols {\r\n  [column: string]: string;\r\n}\r\n\r\nexport interface DQState {\r\n  timestamp: number | undefined;\r\n  data: DQItem[];\r\n  kfids: string[];\r\n  selectedKfid: string | undefined;\r\n  view: DQView;\r\n  loading: boolean;\r\n  filterTableCols: FilterTableCols;\r\n  isInitialState: boolean;\r\n}\r\n\r\nexport interface DQExcelResponse {\r\n  file: string;\r\n}\r\n","import { AxiosError } from \"axios\";\r\nimport { createAction, createAsyncThunk, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FilterState,\r\n  ScrapeState,\r\n  DataView,\r\n  ValidationResponse,\r\n} from \"../models/scrapeTypes\";\r\nimport { FilterTableCols, SortTableCol } from \"../models/flexTypes\";\r\nimport { APIErrorResponse } from \"../models/generalTypes\";\r\nimport { fetchScrapeInitData, fetchScrapeRequestData } from \"../helpers/apiCalls\";\r\nimport { fetchScrapeRequests } from \"../helpers/scrapeUtils\";\r\nimport { toast } from \"../components/Common/toast\";\r\nimport { RootState } from \"./_store\";\r\n\r\n// initial state --------------\r\nconst initialState: ScrapeState = {\r\n  ScrapeData: [],\r\n  timestamp: 0,\r\n  filteredByView: [],\r\n  filteredByRA: [],\r\n  uniqueRAs: [],\r\n  fieldList: [],\r\n  filterTableCols: {},\r\n  sortTableCol: {},\r\n  expand: true,\r\n  dataView: DataView.single,\r\n  filterState: FilterState.all,\r\n  loading: false,\r\n  ErrorMsg: null,\r\n  fileDetails: {\r\n    kfids: [],\r\n    numRecords: 0,\r\n  },\r\n};\r\n\r\n// Action creators -----------------------------------\r\nexport const expandAction = createAction(\"scrape/expand\");\r\nexport const setFileDetails = createAction<ValidationResponse>(\"scrape/setFileDetails\");\r\nexport const setDataView = createAction(\"scrape/setDataView\");\r\nexport const selectRaAction = createAction<string>(\"scrape/selectRA\");\r\nexport const setLocalFinished = createAction<string>(\"scrape/setLocalFinish\");\r\nexport const setLocalProgress = createAction<string>(\"scrape/setLocalProgress\");\r\nexport const setFilterTableCol = createAction<FilterTableCols>(\"scrape/filterTableCols\");\r\nexport const setFilterState = createAction<FilterState>(\"scrape/setFilterState\");\r\nexport const setSortState = createAction<SortTableCol>(\"scrape/setSortState\");\r\nexport const clearAllTableFilters = createAction(\"scrape/clearAllTableFilters\");\r\nexport const clearAllState = createAction(\"scrape/clearAllState\");\r\n\r\n// Thunk action creators -------------------------------\r\nexport const fetchScrapeData = createAsyncThunk(\r\n  \"scrape/fetchScrapeData\",\r\n  async (args: { isInitial: boolean; file: File | null }, thunkAPI) => {\r\n    const { dispatch } = thunkAPI;\r\n    const { isInitial, file } = args;\r\n\r\n    try {\r\n      if (isInitial) {\r\n        const response = await fetchScrapeInitData();\r\n        const { data, timestamp, fieldList } = response.data;\r\n        return { data, timestamp, fieldList };\r\n      }\r\n\r\n      const timestamp = Date.now();\r\n      const { data } = await fetchScrapeRequests(file as File, timestamp, dispatch);\r\n      dispatch(clearAllState());\r\n      return { data, timestamp };\r\n    } catch (err) {\r\n      const error = err as AxiosError<APIErrorResponse>;\r\n      return thunkAPI.rejectWithValue(error.response?.data.errMessage);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchOnlyData = createAsyncThunk(\r\n  \"scrape/fetchDataOnly\",\r\n  async (_, { getState }) => {\r\n    const { timestamp } = (getState() as RootState).scrape;\r\n    const response = await fetchScrapeRequestData(timestamp);\r\n    return { data: response.data.data };\r\n  }\r\n);\r\n\r\n// Reducer -------------------------------------------\r\nconst scrapeReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(setFileDetails, (state, action) => {\r\n      state.fileDetails.kfids = action.payload.kfids;\r\n      state.fileDetails.numRecords = action.payload.numRecords;\r\n    })\r\n    .addCase(fetchScrapeData.pending, (state) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(fetchScrapeData.fulfilled, (state, action) => {\r\n      state.loading = false;\r\n      state.ErrorMsg = null;\r\n      const { data: Items, timestamp } = action.payload;\r\n      Items.forEach((item) => {\r\n        item.finished = false;\r\n        item.onProgress = false;\r\n      });\r\n      state.ScrapeData = Items;\r\n      state.timestamp = timestamp;\r\n      state.filteredByView = Items.map((item) => item.kfid);\r\n      state.filteredByRA = Items.map((item) => item.kfid);\r\n      if (action.payload.fieldList) state.fieldList = action.payload.fieldList;\r\n      state.uniqueRAs = Array.from(new Set(Items.map((item) => item.ra_id)));\r\n    })\r\n    .addCase(fetchScrapeData.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.ErrorMsg = action.payload as string;\r\n      toast(state.ErrorMsg, \"error\");\r\n    })\r\n    .addCase(fetchOnlyData.fulfilled, (state, action) => {\r\n      const { data: Items } = action.payload;\r\n      Items.forEach((item) => {\r\n        item.finished = false;\r\n        item.onProgress = false;\r\n      });\r\n      state.ScrapeData = Items;\r\n      state.filteredByView = Items.map((item) => item.kfid);\r\n      state.filteredByRA = Items.map((item) => item.kfid);\r\n      state.uniqueRAs = Array.from(new Set(Items.map((item) => item.ra_id)));\r\n    })\r\n    .addCase(expandAction, (state) => {\r\n      state.expand = !state.expand;\r\n    })\r\n    .addCase(selectRaAction, (state, action) => {\r\n      if (action.payload === \"all\")\r\n        state.filteredByRA = state.ScrapeData.map((el) => el.kfid);\r\n      else\r\n        state.filteredByRA = state.ScrapeData.filter(\r\n          (el) => el.ra_id === action.payload\r\n        ).map((el) => el.kfid);\r\n    })\r\n    .addCase(setLocalFinished, (state, action) => {\r\n      const item = state.ScrapeData.find((el) => el.kfid === action.payload);\r\n      if (item) {\r\n        item.onProgress = false;\r\n        item.finished = !item.finished;\r\n      }\r\n    })\r\n    .addCase(setLocalProgress, (state, action) => {\r\n      const item = state.ScrapeData.find((el) => el.kfid === action.payload);\r\n      if (item) {\r\n        item.finished = false;\r\n        item.onProgress = !item.onProgress;\r\n      }\r\n    })\r\n    .addCase(setFilterState, (state, action) => {\r\n      const filterState = action.payload;\r\n      state.filterState = filterState;\r\n      if (filterState === FilterState.all)\r\n        state.filteredByView = state.ScrapeData.map((el) => el.kfid);\r\n      if (filterState === FilterState.finished)\r\n        state.filteredByView = state.ScrapeData.filter((el) => el.finished).map(\r\n          (el) => el.kfid\r\n        );\r\n      if (filterState === FilterState.progress)\r\n        state.filteredByView = state.ScrapeData.filter((el) => el.onProgress).map(\r\n          (el) => el.kfid\r\n        );\r\n    })\r\n    .addCase(setDataView, (state) => {\r\n      state.dataView =\r\n        state.dataView === DataView.single ? DataView.table : DataView.single;\r\n    })\r\n    .addCase(setFilterTableCol, (state, action) => {\r\n      if (Object.values(action.payload)[0] === \"\")\r\n        delete state.filterTableCols[Object.keys(action.payload)[0]];\r\n      else state.filterTableCols = { ...state.filterTableCols, ...action.payload };\r\n    })\r\n    .addCase(setSortState, (state, action) => {\r\n      if (action.payload.column) state.sortTableCol = action.payload;\r\n    })\r\n    .addCase(clearAllTableFilters, (state) => {\r\n      state.filterTableCols = {};\r\n    })\r\n    .addCase(clearAllState, (state) => {\r\n      const { fieldList, fileDetails } = state;\r\n      state = Object.assign(state, initialState);\r\n      state.fieldList = fieldList;\r\n      state.fileDetails = fileDetails;\r\n    })\r\n    .addDefaultCase((state) => state);\r\n});\r\n\r\nexport default scrapeReducer;\r\n","import { toaster } from \"evergreen-ui\";\r\n\r\ntype ToasterType = \"notify\" | \"success\" | \"error\";\r\n\r\nexport const toast = (content: string, type: ToasterType) => {\r\n  switch (type) {\r\n    case \"notify\":\r\n      toaster.notify(content, { duration: 5 });\r\n      break;\r\n    case \"success\":\r\n      toaster.success(content, { duration: 5 });\r\n      break;\r\n    case \"error\":\r\n      toaster.warning(content, { duration: 5 });\r\n      break;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { FaCheckCircle, FaGlobe } from \"react-icons/fa\";\r\nimport { IoMdAlert } from \"react-icons/io\";\r\nimport { MdFormatIndentDecrease } from \"react-icons/md\";\r\nimport {\r\n  AccordionItem,\r\n  AccordionItemHeading,\r\n  AccordionItemButton,\r\n  AccordionItemPanel,\r\n} from \"react-accessible-accordion\";\r\nimport cx from \"classnames\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport { setLocalFinished, setLocalProgress } from \"../../redux/scrape\";\r\nimport { ScrapeDataType } from \"../../models/scrapeTypes\";\r\nimport { capitalize } from \"../../helpers/utils\";\r\nimport styles from \"../../styles/tables.module.scss\";\r\nimport { matchFunc } from \"./matchFunc\";\r\n\r\ninterface Props {\r\n  data: ScrapeDataType;\r\n}\r\n\r\nconst ScrapeSingleTable: React.FC<Props> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { fieldList, expand } = useSelector((state: RootState) => state.scrape);\r\n  const [localExpand, setLocalExpand] = useState(expand);\r\n  const headerClass = cx(styles.scrapeSingle__header, {\r\n    [styles.finished]: data.finished,\r\n    [styles.progress]: data.onProgress,\r\n  });\r\n\r\n  return (\r\n    <div className={styles.scrapeSingle}>\r\n      <AccordionItem uuid={data.kfid} dangerouslySetExpanded={localExpand}>\r\n        <div className={headerClass}>\r\n          <p>{`KeyID - ${data.kfid} | CompanyID - ${data.ref_no} | RaID - ${data.ra_id}`}</p>\r\n          <div>\r\n            <FaGlobe className={styles[\"scrapeSingle__header-icon\"]} />\r\n            <FaCheckCircle\r\n              className={styles[\"scrapeSingle__header-icon\"]}\r\n              onClick={() => dispatch(setLocalFinished(data.kfid))}\r\n            />\r\n            <IoMdAlert\r\n              className={styles[\"scrapeSingle__header-icon\"]}\r\n              onClick={() => dispatch(setLocalProgress(data.kfid))}\r\n            />\r\n            <AccordionItemHeading>\r\n              <AccordionItemButton style={{ display: \"flex\" }}>\r\n                <MdFormatIndentDecrease\r\n                  className={styles[\"scrapeSingle__header-icon\"]}\r\n                  onClick={() => setLocalExpand(!localExpand)}\r\n                />\r\n              </AccordionItemButton>\r\n            </AccordionItemHeading>\r\n          </div>\r\n        </div>\r\n        <AccordionItemPanel>\r\n          <div className={styles.scrapeSingle__table}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Fields</th>\r\n                  <th>UV Data</th>\r\n                  <th>Scraped Data</th>\r\n                  <th>Result</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {fieldList.map((field) => {\r\n                  return field in data ? (\r\n                    <tr key={uuid()}>\r\n                      <td>{capitalize(field)}</td>\r\n                      <td>\r\n                        {matchFunc(data[field].uv_value, data[field].scraped_value)}\r\n                      </td>\r\n                      <td>\r\n                        {matchFunc(data[field].scraped_value, data[field].uv_value)}\r\n                      </td>\r\n                      <td>{data[field].match ? \"Match\" : \"No Match\"}</td>\r\n                    </tr>\r\n                  ) : (\r\n                    <tr key={uuid()}>\r\n                      <td>{capitalize(field)}</td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </AccordionItemPanel>\r\n      </AccordionItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrapeSingleTable;\r\n","import { Column } from \"../../models/flexTypes\";\r\n\r\nexport const computedStyles = (width: number): { [key: string]: string } => ({\r\n  width: `${width}px`,\r\n});\r\n\r\nexport const calcHeaderWidth = (\r\n  tableRef: React.RefObject<HTMLDivElement>,\r\n  width: number\r\n): number => {\r\n  if (tableRef.current)\r\n    return tableRef.current.scrollHeight < tableRef.current.clientHeight\r\n      ? width\r\n      : width - 4;\r\n  return width;\r\n};\r\n\r\nexport const calcTableWidth = (columns: Column[]): number => {\r\n  return columns.reduce((acc, curr) => {\r\n    acc += curr.colWidth;\r\n    return acc;\r\n  }, 0);\r\n};\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Column } from \"../../models/flexTypes\";\r\nimport { HeaderSelectProps, SelectEvent, HandleSelectFunc } from \"../../models/flexTypes\";\r\nimport styles from \"../../styles/flexTable.module.scss\";\r\nimport { calcHeaderWidth, computedStyles } from \"./helpers\";\r\n\r\nconst handleSearchWrapper = (col: Column, handleSelect: HandleSelectFunc) => {\r\n  return (event: SelectEvent) => handleSelect(event, col);\r\n};\r\n\r\nconst FlexHeaderSelect: React.FC<HeaderSelectProps> = (props) => {\r\n  const { tableRef, col } = props;\r\n  const { filterTableCols, selectColumns, handleSelect, options } = props;\r\n\r\n  return (\r\n    <div\r\n      className={styles[\"table__header-selectInput\"]}\r\n      style={computedStyles(calcHeaderWidth(tableRef, col.colWidth))}\r\n    >\r\n      {selectColumns &&\r\n        selectColumns.includes(col.colName) &&\r\n        filterTableCols &&\r\n        handleSelect && (\r\n          <div style={{ width: \"90%\" }}>\r\n            <Select\r\n              options={options && options[col.colName]}\r\n              value={\r\n                col.colName in filterTableCols\r\n                  ? {\r\n                      label: filterTableCols[col.colName],\r\n                      value: filterTableCols[col.colName],\r\n                    }\r\n                  : null\r\n              }\r\n              isClearable\r\n              isSearchable\r\n              onChange={(event) => handleSearchWrapper(col, handleSelect)(event)}\r\n            />\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexHeaderSelect;\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport { FaAngleUp, FaAngleDown } from \"react-icons/fa\";\r\nimport { calcHeaderWidth, computedStyles } from \"./helpers\";\r\nimport styles from \"../../styles/flexTable.module.scss\";\r\nimport { HeaderCellProps } from \"../../models/flexTypes\";\r\n\r\nconst FlexHeaderCell: React.FC<HeaderCellProps> = (props) => {\r\n  const { col, handleSort, tableRef, selectColumns, sortTableCol } = props;\r\n\r\n  return (\r\n    <div\r\n      className={styles[\"table__header-headerCell\"]}\r\n      style={computedStyles(calcHeaderWidth(tableRef, col.colWidth))}\r\n    >\r\n      <p>{col.colName}</p>\r\n      {selectColumns && selectColumns.includes(col.colName) && handleSort && (\r\n        <div>\r\n          <FaAngleUp\r\n            className={cx(styles[\"sort-icon\"], {\r\n              [styles.active]:\r\n                sortTableCol?.column?.colName === col.colName &&\r\n                sortTableCol?.desc === true,\r\n            })}\r\n            onClick={() => handleSort({ column: col, desc: true })}\r\n          />\r\n          <FaAngleDown\r\n            className={cx(styles[\"sort-icon\"], {\r\n              [styles.active]:\r\n                sortTableCol?.column?.colName === col.colName &&\r\n                sortTableCol?.desc === false,\r\n            })}\r\n            onClick={() => handleSort({ column: col, desc: false })}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexHeaderCell;\r\n","import React from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { HeaderProps } from \"../../models/flexTypes\";\r\nimport styles from \"../../styles/flexTable.module.scss\";\r\nimport FlexHeaderSelect from \"./FlexHeaderSelect\";\r\nimport FlexHeaderCell from \"./FlexHeaderCell\";\r\n\r\nconst FlexHeader: React.FC<HeaderProps> = (props) => {\r\n  const { columns, data, tableRef } = props;\r\n  const { filterTableCols, handleSelect, options, selectColumns } = props;\r\n  const { sortColumns, handleSort, sortTableCol } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.table__header}>\r\n        {columns.map((col) => (\r\n          <FlexHeaderCell\r\n            col={col}\r\n            key={uuid()}\r\n            tableRef={tableRef}\r\n            handleSort={handleSort}\r\n            selectColumns={selectColumns}\r\n            sortColumns={sortColumns}\r\n            sortTableCol={sortTableCol}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={styles[\"table__body-row\"]}>\r\n        {columns.map((col) => (\r\n          <FlexHeaderSelect\r\n            key={uuid()}\r\n            data={data}\r\n            tableRef={tableRef}\r\n            selectColumns={selectColumns}\r\n            options={options}\r\n            filterTableCols={filterTableCols}\r\n            handleSelect={handleSelect}\r\n            col={col}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FlexHeader;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { TableProps } from \"../../models/flexTypes\";\r\nimport styles from \"../../styles/flexTable.module.scss\";\r\nimport { calcHeaderWidth, computedStyles, calcTableWidth } from \"./helpers\";\r\nimport { range } from \"../../helpers/utils\";\r\nimport FlexHeader from \"./FlexHeader\";\r\n\r\nconst FlexTable: React.FC<TableProps> = (props) => {\r\n  const { columns, data, rowNum, selectColumns, sortColumns, options } = props;\r\n  const { filterTableCols, handleSelect, handleSort, sortTableCol } = props;\r\n  const [, setRefChange] = useState(false);\r\n  const tableRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    setRefChange(true);\r\n  }, [tableRef]);\r\n\r\n  const tableWidth = calcTableWidth(columns);\r\n\r\n  return (\r\n    <div className={styles.table} style={computedStyles(tableWidth)}>\r\n      <FlexHeader\r\n        columns={columns}\r\n        data={data}\r\n        tableRef={tableRef}\r\n        selectColumns={selectColumns}\r\n        options={options}\r\n        sortColumns={sortColumns}\r\n        filterTableCols={filterTableCols}\r\n        handleSelect={handleSelect}\r\n        handleSort={handleSort}\r\n        sortTableCol={sortTableCol}\r\n      />\r\n      <div className={styles.table__body} ref={tableRef}>\r\n        {range(rowNum).map((index) => (\r\n          <div className={styles[\"table__body-row\"]} key={uuid()}>\r\n            {columns.map((col) => (\r\n              <div\r\n                key={uuid()}\r\n                className={styles[\"table__body-row-cell\"]}\r\n                style={computedStyles(calcHeaderWidth(tableRef, col.colWidth))}\r\n              >\r\n                {data[col.colName][index]}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexTable;\r\n","import { setIntersection, sortArrayIndex } from \"../../helpers/utils\";\r\nimport { Column, TableData, FilterTableCols, OptionsArray } from \"../../models/flexTypes\";\r\n\r\nexport const filterData = (\r\n  data: TableData<string>,\r\n  filterCols: FilterTableCols\r\n): number => {\r\n  const indexSetArray: Set<number>[] = [];\r\n\r\n  Object.keys(filterCols).forEach((column) => {\r\n    const indices: number[] = data[column]\r\n      .map((el, idx) => (el === filterCols[column] ? idx : -1))\r\n      .filter((el) => el !== -1);\r\n\r\n    indexSetArray.push(new Set(indices));\r\n  });\r\n\r\n  const filteredIndices: number[] = setIntersection(...indexSetArray);\r\n\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] = data[key].filter((_, idx) => filteredIndices.includes(idx));\r\n  });\r\n\r\n  return filteredIndices.length;\r\n};\r\n\r\nexport const sortData = (data: TableData<string>, col: Column, desc: boolean) => {\r\n  const sortedIndices = sortArrayIndex(data[col.colName], desc);\r\n\r\n  Object.keys(data).forEach((key) => {\r\n    const sortedArray = [];\r\n    for (let index = 0; index < sortedIndices.length; index++) {\r\n      sortedArray.push(data[key][sortedIndices[index]]);\r\n    }\r\n    data[key] = sortedArray;\r\n  });\r\n};\r\n\r\nexport const createOptions = (data: TableData<string>, cols: string[]) => {\r\n  return cols.reduce<OptionsArray>((acc, curr) => {\r\n    acc[curr] = Array.from(new Set(data[curr])).map((item) => ({\r\n      label: item,\r\n      value: item,\r\n    }));\r\n    return acc;\r\n  }, {});\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ScrapeDataType } from \"../../models/scrapeTypes\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport styles from \"../../styles/scrape.module.scss\";\r\nimport FlexTable from \"../FlexTable/FlexTable\";\r\nimport { Column, HandleSelectFunc, HandleSortFunc } from \"../../models/flexTypes\";\r\nimport { setFilterTableCol, setSortState } from \"../../redux/scrape\";\r\nimport { arrangeData, createColumns, formatData } from \"../../helpers/scrapeUtils\";\r\nimport { filterData, sortData, createOptions } from \"../FlexTable/FlexUtils\";\r\n\r\ninterface Props {\r\n  data: ScrapeDataType[];\r\n}\r\n\r\nconst ScrapeFullTable: React.FC<Props> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { fieldList, filterTableCols, sortTableCol } = useSelector(\r\n    (state: RootState) => state.scrape\r\n  );\r\n\r\n  const columns: Column[] = createColumns(fieldList);\r\n  const selectColumns = [\"kfid\", \"ra_id\", \"company_name\", \"company_type\"];\r\n  const sortColumns = [\"kfid\", \"ra_id\", \"company_name\", \"company_type\"];\r\n\r\n  const handleSelect: HandleSelectFunc = (event, col) => {\r\n    if (event) dispatch(setFilterTableCol({ [col.colName]: event.value }));\r\n    else dispatch(setFilterTableCol({ [col.colName]: \"\" }));\r\n  };\r\n\r\n  const handleSort: HandleSortFunc = (sortTableCol) => {\r\n    dispatch(setSortState(sortTableCol));\r\n  };\r\n\r\n  let arrangedData = arrangeData(data, fieldList);\r\n  let rowNum = data.length;\r\n\r\n  // mutating the arrangedData object to filter\r\n  if (Object.keys(filterTableCols).length)\r\n    rowNum = filterData(arrangedData, filterTableCols);\r\n\r\n  // mutating the arrangedData object to sort\r\n  if (sortTableCol.column && sortTableCol.desc !== undefined)\r\n    sortData(arrangedData, sortTableCol.column, sortTableCol.desc);\r\n\r\n  // extracting options\r\n  const options = createOptions(arrangedData, selectColumns);\r\n\r\n  // formatting data according to the color\r\n  formatData(arrangedData, fieldList);\r\n\r\n  return (\r\n    <div className={styles.tableContainer}>\r\n      <FlexTable\r\n        columns={columns}\r\n        selectColumns={selectColumns}\r\n        options={options}\r\n        sortColumns={sortColumns}\r\n        data={arrangedData}\r\n        rowNum={rowNum}\r\n        filterTableCols={filterTableCols}\r\n        handleSelect={handleSelect}\r\n        handleSort={handleSort}\r\n        sortTableCol={sortTableCol}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrapeFullTable;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Accordion } from \"react-accessible-accordion\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport { DataView } from \"../../models/scrapeTypes\";\r\nimport ScrapeSingleTable from \"./ScrapeSingleTable\";\r\nimport { intersection } from \"../../helpers/utils\";\r\nimport styles from \"../../styles/scrape.module.scss\";\r\nimport ScrapeFullTable from \"./ScrapeFullTable\";\r\n\r\nconst ScrapeContent = () => {\r\n  const { filteredByView, filteredByRA, ScrapeData, dataView } = useSelector(\r\n    (state: RootState) => state.scrape\r\n  );\r\n\r\n  const filteredIDs = intersection(filteredByRA, filteredByView);\r\n  const filteredData = ScrapeData.filter((data) => filteredIDs.includes(data.kfid));\r\n\r\n  return dataView === DataView.single ? (\r\n    <Accordion allowMultipleExpanded allowZeroExpanded>\r\n      <div className={styles.dataContent}>\r\n        {filteredData.map((el) => (\r\n          <ScrapeSingleTable key={uuid()} data={el} />\r\n        ))}\r\n      </div>\r\n    </Accordion>\r\n  ) : (\r\n    <ScrapeFullTable data={filteredData} />\r\n  );\r\n};\r\n\r\nexport default ScrapeContent;\r\n","import React from \"react\";\r\nimport styles from \"../../styles/buttons.module.scss\";\r\n\r\ntype ButtonType = \"Animated\" | \"Jira\";\r\n\r\ninterface Props {\r\n  text: string;\r\n  type: ButtonType;\r\n  clickHandler?: () => void;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ text, type, clickHandler }) => {\r\n  let classname: string;\r\n  if (type === \"Animated\") classname = styles.animatedButton;\r\n  else classname = styles.jira;\r\n\r\n  return (\r\n    <button className={classname} onClick={clickHandler}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MdRefresh } from \"react-icons/md\";\r\nimport { FcClearFilters } from \"react-icons/fc\";\r\nimport cx from \"classnames\";\r\nimport { SegmentedControl, Switch, FilePicker, Select } from \"evergreen-ui\";\r\nimport Button from \"../Common/Button\";\r\nimport {\r\n  expandAction,\r\n  selectRaAction,\r\n  setFilterState,\r\n  setDataView,\r\n  fetchScrapeData,\r\n  fetchOnlyData,\r\n  clearAllTableFilters,\r\n} from \"../../redux/scrape\";\r\nimport styles from \"../../styles/scrape.module.scss\";\r\nimport { convertToDTString } from \"../../helpers/utils\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport { FilterState, DataView } from \"../../models/scrapeTypes\";\r\n\r\nconst ScrapeHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const {\r\n    expand,\r\n    uniqueRAs,\r\n    filterState,\r\n    filterTableCols,\r\n    timestamp,\r\n    dataView,\r\n    loading,\r\n    fileDetails,\r\n    ScrapeData,\r\n  } = useSelector((state: RootState) => state.scrape);\r\n\r\n  const showReloadButton = () => {\r\n    return fileDetails.numRecords !== 0 && ScrapeData.length < fileDetails.numRecords;\r\n  };\r\n\r\n  const showClearFilterButton = () => {\r\n    return dataView === DataView.table && Object.keys(filterTableCols).length > 0;\r\n  };\r\n\r\n  return (\r\n    <div className={cx(styles.header, { blockElement: loading })}>\r\n      <div className={styles.header__left}>\r\n        <SegmentedControl\r\n          width={240}\r\n          options={[\r\n            { label: \"All\", value: FilterState.all },\r\n            { label: \"Finished\", value: FilterState.finished },\r\n            { label: \"On Progress\", value: FilterState.progress },\r\n          ]}\r\n          value={filterState}\r\n          onChange={(value) => dispatch(setFilterState(value as FilterState))}\r\n        />\r\n        <div className={styles[\"header__left-switch\"]}>\r\n          <div>\r\n            <Switch\r\n              height={20}\r\n              checked={!expand}\r\n              disabled={dataView === DataView.table}\r\n              onChange={() => dispatch(expandAction())}\r\n            />\r\n            <p>Collapse</p>\r\n          </div>\r\n          <div>\r\n            <Switch\r\n              height={20}\r\n              checked={dataView === DataView.table}\r\n              onChange={() => dispatch(setDataView())}\r\n            />\r\n            <p>Table View</p>\r\n          </div>\r\n        </div>\r\n        {showClearFilterButton() && (\r\n          <button\r\n            className={styles[\"header__left-clearButton\"]}\r\n            onClick={() => dispatch(clearAllTableFilters())}\r\n          >\r\n            <span>Clear Filters</span>\r\n            <FcClearFilters />\r\n          </button>\r\n        )}\r\n        {showReloadButton() && (\r\n          <div className={styles[\"header__left-reload\"]}>\r\n            <div>\r\n              <MdRefresh onClick={() => dispatch(fetchOnlyData())} />\r\n            </div>\r\n            <div>\r\n              <p>Reload</p>\r\n              <p>Data</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={styles.header__right}>\r\n        <Select onChange={(e) => dispatch(selectRaAction(e.target.value))}>\r\n          <option value=\"all\">All RAs</option>\r\n          {uniqueRAs.map((ra, id) => (\r\n            <option value={ra} key={id}>\r\n              {ra}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <div className={styles[\"header__right-updateTime\"]}>\r\n          <p>Last Updated Time:</p>\r\n          <p>{convertToDTString(timestamp)}</p>\r\n        </div>\r\n        <FilePicker\r\n          multiple={false}\r\n          width={250}\r\n          placeholder=\"Select the file here!\"\r\n          marginRight=\"1.5rem\"\r\n          onChange={(fileList) => setFile(fileList[0])}\r\n        />\r\n        <Button\r\n          text=\"Upload\"\r\n          type=\"Animated\"\r\n          clickHandler={() =>\r\n            file && dispatch(fetchScrapeData({ isInitial: false, file }))\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrapeHeader;\r\n","import React from \"react\";\r\nimport { Spinner } from \"evergreen-ui\";\r\nimport styles from \"../../styles/loader.module.scss\";\r\n\r\ninterface Props {\r\n  message: string;\r\n}\r\n\r\nconst Loader: React.FC<Props> = ({ message }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Spinner display=\"flex\" alignItems=\"center\" justifyContent=\"center\" size={54} />\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CornerDialog } from \"evergreen-ui\";\r\n\r\ninterface Props {\r\n  numRecords: number;\r\n  numFetched: number;\r\n}\r\n\r\nconst ScrapeReportBox: React.FC<Props> = ({ numFetched, numRecords }) => {\r\n  const [isShown, setIsShown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (numFetched > 0 && numRecords > 0) {\r\n      setIsShown(true);\r\n    }\r\n  }, [numFetched, numRecords]);\r\n\r\n  const title = \"LEI Scrape Request Details\";\r\n  const description = `${numRecords} requests were sent \\n\r\n  and ${numFetched} scraped successfully`;\r\n\r\n  return (\r\n    <CornerDialog\r\n      title={title}\r\n      isShown={isShown}\r\n      hasFooter={false}\r\n      onCloseComplete={() => setIsShown(false)}\r\n    >\r\n      {description}\r\n    </CornerDialog>\r\n  );\r\n};\r\n\r\nexport default ScrapeReportBox;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"../../styles/scrape.module.scss\";\r\nimport ScrapeContent from \"./ScrapeContent\";\r\nimport ScrapeHeader from \"./ScrapeHeader\";\r\nimport Loader from \"../Common/Loader\";\r\nimport ScrapeReportBox from \"./ScrapeReportBox\";\r\nimport { fetchScrapeData } from \"../../redux/scrape\";\r\nimport { RootState } from \"../../redux/_store\";\r\n\r\nconst ScrapeMain = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    ScrapeData,\r\n    fileDetails: { numRecords },\r\n    ErrorMsg,\r\n  } = useSelector((state: RootState) => state.scrape);\r\n\r\n  useEffect(() => {\r\n    if (ScrapeData.length === 0)\r\n      dispatch(fetchScrapeData({ file: null, isInitial: true }));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  let component: JSX.Element;\r\n  if (loading) {\r\n    if (ScrapeData.length > 0) {\r\n      component = <Loader message={`scraping ${numRecords} records...`} />;\r\n    } else {\r\n      component = <Loader message=\"fetching initial data...\" />;\r\n    }\r\n  } else {\r\n    component = (\r\n      <React.Fragment>\r\n        {!ErrorMsg && (\r\n          <ScrapeReportBox numRecords={numRecords} numFetched={ScrapeData.length} />\r\n        )}\r\n        <ScrapeContent />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <ScrapeHeader />\r\n      {component}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrapeMain;\r\n","import React from \"react\";\r\nimport { colNames, colorObj, ImpactToColor } from \"../models/dqTypes\";\r\nimport { DQItem } from \"../models/dqTypes\";\r\nimport { Column, TableData } from \"../models/flexTypes\";\r\n\r\ntype FlattenData = { [key: string]: string }[];\r\n\r\nexport const flattenData = (data: DQItem[]) => {\r\n  const flatData: FlattenData = [];\r\n\r\n  for (const item of data) {\r\n    const newRowObj = {\r\n      [colNames.Date]: new Date().toDateString(),\r\n      [colNames.ErrorCategory]: item[\"errorType\"],\r\n      [colNames.ErrorImpact]: item[\"Impact\"],\r\n      [colNames.ErrorDescription]: item[\"error\"],\r\n      [colNames.FieldsOrRelatedField]: item[\"errorColumn\"].join(\", \"),\r\n      [colNames.KeyFieldValue]: \"\",\r\n      [colNames.Owner]: \"\",\r\n      [colNames.LEIStatus]: \"\",\r\n      [colNames.OfficialEntityName]: \"\",\r\n    };\r\n\r\n    const metaData = item.metadata;\r\n\r\n    Object.keys(metaData).forEach((kfid) => {\r\n      const newAdditionalRowObj = { ...newRowObj };\r\n      newAdditionalRowObj[colNames.KeyFieldValue] = kfid;\r\n      newAdditionalRowObj[colNames.Owner] = metaData[kfid][\"Owner\"];\r\n      newAdditionalRowObj[colNames.LEIStatus] = metaData[kfid][\"LEIStatus\"];\r\n      newAdditionalRowObj[colNames.OfficialEntityName] =\r\n        metaData[kfid][\"OfficialEntityName\"];\r\n\r\n      flatData.push(newAdditionalRowObj);\r\n    });\r\n  }\r\n\r\n  return flatData;\r\n};\r\n\r\nexport const arrangeData = (data: FlattenData) => {\r\n  const tableData: TableData<string> = {};\r\n  Object.values(colNames).forEach((colName) => {\r\n    tableData[colName] = data.map((item) => item[colName]);\r\n  });\r\n\r\n  return tableData;\r\n};\r\n\r\nexport const calculateKFIDCount = (data: TableData<string>) => {\r\n  const kfidCount: { [kfid: string]: number } = {};\r\n  const kfids = data[colNames.KeyFieldValue];\r\n\r\n  kfids.forEach((kfid) => {\r\n    kfidCount[kfid] = kfidCount[kfid] ? kfidCount[kfid] + 1 : 1;\r\n  });\r\n\r\n  const countArray = kfids.map((kfid) => kfidCount[kfid].toString());\r\n  return countArray;\r\n};\r\n\r\nexport const createColumns = (): Column[] => {\r\n  const columnList: Column[] = [];\r\n  columnList.push({ colName: colNames.Date, colWidth: 120 });\r\n  columnList.push({ colName: colNames.ErrorCategory, colWidth: 120 });\r\n  columnList.push({ colName: colNames.ErrorImpact, colWidth: 120 });\r\n  columnList.push({ colName: colNames.Owner, colWidth: 80 });\r\n  columnList.push({ colName: colNames.KeyFieldValue, colWidth: 120 });\r\n  columnList.push({ colName: colNames.OfficialEntityName, colWidth: 200 });\r\n  columnList.push({ colName: colNames.LEIStatus, colWidth: 120 });\r\n  columnList.push({ colName: colNames.FieldsOrRelatedField, colWidth: 300 });\r\n  columnList.push({ colName: colNames.ErrorDescription, colWidth: 400 });\r\n  columnList.push({ colName: colNames.Count, colWidth: 80 });\r\n  return columnList;\r\n};\r\n\r\nexport const formatData = (arrangedData: TableData<string>) => {\r\n  const impactCol = arrangedData[colNames.ErrorImpact];\r\n\r\n  const coloredNodes: React.ReactNode[] = impactCol.map((item) => {\r\n    const color = ImpactToColor[item];\r\n    return (\r\n      <span\r\n        style={{\r\n          backgroundColor: `${colorObj[color]}`,\r\n          padding: \"5px 20px\",\r\n          color: \"#fff\",\r\n        }}\r\n      >\r\n        {item}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  const formattedData: TableData<string | React.ReactNode> = { ...arrangedData };\r\n  formattedData[colNames.ErrorImpact] = coloredNodes;\r\n\r\n  return formattedData;\r\n};\r\n","export enum ConcatFileTypes {\r\n  lei = \"lei\",\r\n  rr = \"rr\",\r\n  repex = \"repex\",\r\n}\r\n\r\ninterface ConcatRecord {\r\n  [key: string]: string;\r\n}\r\n\r\nexport interface RequestParams {\r\n  fileType: ConcatFileTypes;\r\n  value: string;\r\n}\r\n\r\nexport interface ResponseBody {\r\n  numRecords: number;\r\n  records: ConcatRecord[];\r\n}\r\n\r\nexport interface ConcatInitResponse {\r\n  counts: {\r\n    rrFile: number;\r\n    leiFile: number;\r\n    repexFile: number;\r\n  };\r\n  last_modified: {\r\n    leiFile: string;\r\n    repexFile: string;\r\n    rrFile: string;\r\n  };\r\n}\r\n\r\nexport interface ConcatState {\r\n  fileType: ConcatFileTypes;\r\n  value: string;\r\n  data: ConcatRecord[];\r\n  loading: boolean;\r\n  isInitialState: boolean;\r\n  initData: ConcatInitResponse | null;\r\n}\r\n","import { createAction, createAsyncThunk, createReducer } from \"@reduxjs/toolkit\";\r\nimport { DQState, DQView, DQRequestBody, FilterTableCols } from \"../models/dqTypes\";\r\nimport { fetchDQData } from \"../helpers/apiCalls\";\r\n\r\nconst initialState: DQState = {\r\n  data: [],\r\n  timestamp: undefined,\r\n  kfids: [],\r\n  selectedKfid: undefined,\r\n  view: \"TableView\",\r\n  loading: false,\r\n  filterTableCols: {},\r\n  isInitialState: true,\r\n};\r\n\r\nexport const populateKfids = createAction<string[]>(\"dq/populateKfids\");\r\nexport const setView = createAction<DQView>(\"dq/setView\");\r\nexport const setKfid = createAction<string | undefined>(\"dq/setKfid\");\r\nexport const clearAll = createAction(\"dq/clearAll\");\r\nexport const setFilterTableCol = createAction<FilterTableCols>(\"dq/filterTableCols\");\r\n\r\nexport const fetchData = createAsyncThunk(\"dq/fetchData\", async (args: DQRequestBody) => {\r\n  const response = await fetchDQData(args);\r\n  return { data: response.data.data, timestamp: response.data.timestamp };\r\n});\r\n\r\nconst dqReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(fetchData.pending, (state) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(fetchData.fulfilled, (state, action) => {\r\n      state = Object.assign(state, initialState);\r\n      state.data = action.payload.data;\r\n      state.timestamp = action.payload.timestamp;\r\n      state.isInitialState = false;\r\n    })\r\n    .addCase(populateKfids, (state, action) => {\r\n      state.kfids = action.payload;\r\n    })\r\n    .addCase(setView, (state, action) => {\r\n      state.view = action.payload;\r\n    })\r\n    .addCase(setKfid, (state, action) => {\r\n      state.selectedKfid = action.payload;\r\n    })\r\n    .addCase(setFilterTableCol, (state, action) => {\r\n      if (Object.values(action.payload)[0] === \"\")\r\n        delete state.filterTableCols[Object.keys(action.payload)[0]];\r\n      else state.filterTableCols = { ...state.filterTableCols, ...action.payload };\r\n    })\r\n    .addCase(clearAll, (state) => {\r\n      state = Object.assign(state, initialState);\r\n    })\r\n    .addDefaultCase((state) => state);\r\n});\r\n\r\nexport default dqReducer;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FlexTable from \"../FlexTable/FlexTable\";\r\nimport { colNames, DQItem } from \"../../models/dqTypes\";\r\nimport {\r\n  flattenData,\r\n  arrangeData,\r\n  createColumns,\r\n  formatData,\r\n  calculateKFIDCount,\r\n} from \"../../helpers/dqUtils\";\r\nimport { setFilterTableCol } from \"../../redux/dq\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport styles from \"../../styles/dq.module.scss\";\r\nimport { HandleSelectFunc } from \"../../models/flexTypes\";\r\nimport { filterData, createOptions } from \"../FlexTable/FlexUtils\";\r\n\r\ninterface Props {\r\n  data: DQItem[];\r\n}\r\n\r\nconst DQTable: React.FC<Props> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { filterTableCols } = useSelector((state: RootState) => state.dq);\r\n  const selectColumns = [\r\n    colNames.ErrorCategory,\r\n    colNames.ErrorDescription,\r\n    colNames.KeyFieldValue,\r\n    colNames.Owner,\r\n  ];\r\n\r\n  // flatten data and arrange the data for flex table\r\n  const columns = createColumns();\r\n  const flattenedData = flattenData(data);\r\n  const arrangedData = arrangeData(flattenedData);\r\n  let rowNum = flattenedData.length;\r\n\r\n  // mutating the arrangedData object to filter\r\n  if (Object.keys(filterTableCols).length)\r\n    rowNum = filterData(arrangedData, filterTableCols);\r\n\r\n  // adding count column\r\n  const counts = calculateKFIDCount(arrangedData);\r\n  arrangedData[colNames.Count] = counts;\r\n\r\n  // populate select options\r\n  const options = createOptions(arrangedData, selectColumns);\r\n\r\n  const formattedData = formatData(arrangedData);\r\n  const handleSelect: HandleSelectFunc = (event, col) => {\r\n    if (event) dispatch(setFilterTableCol({ [col.colName]: event.value }));\r\n    else dispatch(setFilterTableCol({ [col.colName]: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.tableContainer}>\r\n      <FlexTable\r\n        data={formattedData}\r\n        rowNum={rowNum}\r\n        columns={columns}\r\n        selectColumns={selectColumns}\r\n        options={options}\r\n        handleSelect={handleSelect}\r\n        filterTableCols={filterTableCols}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DQTable;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Select, { ValueType } from \"react-select\";\r\nimport cx from \"classnames\";\r\nimport { FilePicker } from \"evergreen-ui\";\r\nimport { fetchData, setKfid, setView, clearAll } from \"../../redux/dq\";\r\nimport Button from \"../Common/Button\";\r\nimport { fileToBase64 } from \"../../helpers/utils\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport { downloadDQExcel } from \"../../helpers/apiCalls\";\r\nimport styles from \"../../styles/dq.module.scss\";\r\n\r\nconst DQHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const { kfids, loading, timestamp } = useSelector((state: RootState) => state.dq);\r\n\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const selectOptions = kfids.map((kfid) => ({ value: kfid, label: kfid }));\r\n\r\n  const clickHandler = async () => {\r\n    if (!file) return;\r\n    try {\r\n      const fileContent = await fileToBase64(file);\r\n      dispatch(fetchData({ uploaded_file: fileContent }));\r\n    } catch (err) {\r\n      console.error(err);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const downloadExcelHandler = async () => {\r\n    const time = timestamp as number;\r\n    const response = await downloadDQExcel(time);\r\n    const bstr = atob(response.data.file);\r\n    let n = bstr.length;\r\n    const u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    const filename = `DQCheck-${new Date(time)\r\n      .toDateString()\r\n      .split(\" \")\r\n      .join(\"_\")}-${new Date(time)\r\n      .toTimeString()\r\n      .split(/[:\\s]/)\r\n      .splice(0, 3)\r\n      .join(\"_\")}.xlsx`;\r\n\r\n    const file = new File([u8arr], filename, {\r\n      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n    });\r\n\r\n    const url = window.URL.createObjectURL(file);\r\n    const a = document.createElement(\"a\");\r\n    a.style.display = \"none\";\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const selectHandler = (\r\n    e: ValueType<\r\n      {\r\n        value: string;\r\n        label: string;\r\n      },\r\n      false\r\n    >\r\n  ) => {\r\n    if (e?.value) {\r\n      dispatch(setKfid(e.value));\r\n      dispatch(setView(\"SingleKFIDView\"));\r\n    } else {\r\n      dispatch(setView(\"TableView\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cx(styles.header, { blockElement: loading })}>\r\n      <div className={styles.header__left}>\r\n        <Select\r\n          options={selectOptions}\r\n          isClearable\r\n          isSearchable\r\n          onChange={selectHandler}\r\n        />\r\n      </div>\r\n      <div className={styles.header__right}>\r\n        <Button text=\"Clear All\" type=\"Jira\" clickHandler={() => dispatch(clearAll())} />\r\n        <FilePicker\r\n          multiple={false}\r\n          width={250}\r\n          placeholder=\"Select the file here!\"\r\n          marginRight=\"1.5rem\"\r\n          onChange={(fileList) => setFile(fileList[0])}\r\n        />\r\n        <Button text=\"Upload\" type=\"Animated\" clickHandler={clickHandler} />\r\n        <Button\r\n          text=\"Download Excel\"\r\n          type=\"Animated\"\r\n          clickHandler={downloadExcelHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DQHeader;\r\n","import React from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { DQItem, MetaData, colorObj, ImpactToColor } from \"../../models/dqTypes\";\r\n\r\nimport styles from \"../../styles/dq.module.scss\";\r\nimport tableStyles from \"../../styles/tables.module.scss\";\r\n\r\ninterface Props {\r\n  data: DQItem[];\r\n  kfid: string;\r\n}\r\n\r\nconst DQSingleTable: React.FC<Props> = ({ data, kfid }) => {\r\n  let metaData = {} as MetaData;\r\n\r\n  for (const item of data) {\r\n    if (item.KFID.includes(kfid)) {\r\n      metaData = item.metadata[kfid];\r\n      break;\r\n    } else {\r\n      continue;\r\n    }\r\n  }\r\n\r\n  const kfidData = data.filter((item) => item.KFID.includes(kfid));\r\n\r\n  return (\r\n    <div className={styles.singleTable}>\r\n      <div className={styles.singleTable__metadata}>\r\n        <h1>KFID: {kfid}</h1>\r\n        <ul>\r\n          <li>\r\n            <span>Data: </span>\r\n            <span>{new Date().toDateString()}</span>\r\n          </li>\r\n          <li>\r\n            <span>Lei Status: </span>\r\n            <span>{metaData.LEIStatus}</span>\r\n          </li>\r\n          <li>\r\n            <span>Entity Name: </span>\r\n            <span>{metaData.OfficialEntityName}</span>\r\n          </li>\r\n          <li>\r\n            <span>Owner: </span>\r\n            <span>{metaData.Owner}</span>\r\n          </li>\r\n          <li>\r\n            <span>Count: </span>\r\n            <span>{kfidData.length}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className={tableStyles.dqSingleTable}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Error Category</th>\r\n              <th>Error Impact</th>\r\n              <th>Fields or Related Field</th>\r\n              <th>Error Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {kfidData.map((item) => (\r\n              <tr key={uuid()}>\r\n                <td>{item[\"errorType\"]}</td>\r\n                <td>\r\n                  <span\r\n                    style={{\r\n                      backgroundColor: colorObj[ImpactToColor[item[\"Impact\"]]],\r\n                      padding: \"5px 10px\",\r\n                      color: \"#fff\",\r\n                    }}\r\n                  >\r\n                    {item[\"Impact\"]}\r\n                  </span>\r\n                </td>\r\n                <td>{item[\"errorColumn\"]}</td>\r\n                <td>{item[\"error\"]}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DQSingleTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport Loader from \"../Common/Loader\";\r\nimport DQTable from \"./DQTable\";\r\nimport DQHeader from \"./DQHeader\";\r\nimport DQSingleTable from \"./DQSingleTable\";\r\nimport { populateKfids } from \"../../redux/dq\";\r\nimport styles from \"../../styles/dq.module.scss\";\r\n\r\nconst DQMain = () => {\r\n  const dispatch = useDispatch();\r\n  const { data, view, selectedKfid, loading, isInitialState } = useSelector(\r\n    (state: RootState) => state.dq\r\n  );\r\n\r\n  useEffect(() => {\r\n    let kfids: string[] = [];\r\n    data.forEach((item) => {\r\n      kfids = [...kfids, ...item.KFID];\r\n    });\r\n    const distinctKfids = Array.from(new Set(kfids));\r\n    dispatch(populateKfids(distinctKfids));\r\n    // eslint-disable-next-line\r\n  }, [data]);\r\n\r\n  let contentNode: React.ReactNode;\r\n  if (loading) {\r\n    contentNode = <Loader message=\"fetching data...\" />;\r\n  } else if (data.length > 0) {\r\n    if (view === \"TableView\") contentNode = <DQTable data={data} />;\r\n    if (view === \"SingleKFIDView\")\r\n      contentNode = <DQSingleTable data={data} kfid={selectedKfid as string} />;\r\n  } else if (data.length === 0 && !isInitialState) {\r\n    contentNode = <h2 className={styles.noData}>No DQ Errors found!</h2>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <DQHeader />\r\n      {contentNode}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DQMain;\r\n","import { createAction, createAsyncThunk, createReducer } from \"@reduxjs/toolkit\";\r\nimport { ConcatState, ConcatFileTypes } from \"../models/concatTypes\";\r\nimport { fetchConcatData, fetchConcatInitData } from \"../helpers/apiCalls\";\r\nimport { RootState } from \"./_store\";\r\n\r\nconst initialState: ConcatState = {\r\n  fileType: ConcatFileTypes.rr,\r\n  value: \"\",\r\n  data: [],\r\n  loading: false,\r\n  isInitialState: true,\r\n  initData: null,\r\n};\r\n\r\nexport const setFileType = createAction<ConcatFileTypes>(\"concat/setFileType\");\r\nexport const setValue = createAction<string>(\"concat/setValue\");\r\n\r\nexport const fetchData = createAsyncThunk(\"concat/fetchData\", async (_, { getState }) => {\r\n  const { fileType, value } = (getState() as RootState).concat;\r\n  const response = await fetchConcatData({ fileType, value });\r\n  return { data: response.data.records };\r\n});\r\n\r\nexport const fetchInitData = createAsyncThunk(\"concat/fetchInitData\", async () => {\r\n  const response = await fetchConcatInitData();\r\n  return response.data;\r\n});\r\n\r\nconst concatReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(setFileType, (state, action) => {\r\n      state.fileType = action.payload;\r\n    })\r\n    .addCase(setValue, (state, action) => {\r\n      state.value = action.payload;\r\n    })\r\n    .addCase(fetchData.pending, (state) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(fetchData.fulfilled, (state, action) => {\r\n      state.data = action.payload.data;\r\n      state.loading = false;\r\n      state.isInitialState = false;\r\n    })\r\n    .addCase(fetchInitData.fulfilled, (state, action) => {\r\n      state.initData = action.payload;\r\n    })\r\n    .addDefaultCase((state) => state);\r\n});\r\n\r\nexport default concatReducer;\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RadioGroup, TextInputField } from \"evergreen-ui\";\r\nimport { setFileType, setValue, fetchData } from \"../../redux/concat\";\r\nimport { ConcatFileTypes } from \"../../models/concatTypes\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport Button from \"../Common/Button\";\r\nimport { convertDateToString } from \"../../helpers/utils\";\r\nimport styles from \"../../styles/concat.module.scss\";\r\n\r\nconst ConcatHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const { fileType, loading, initData } = useSelector((state: RootState) => state.concat);\r\n\r\n  const radioOptions = [\r\n    { label: \"Level-2 Data\", value: ConcatFileTypes.rr },\r\n    { label: \"Level-1 Data\", value: ConcatFileTypes.lei },\r\n    { label: \"Reporting Exceptions\", value: ConcatFileTypes.repex },\r\n  ];\r\n\r\n  const placeholder = \"###############\";\r\n\r\n  return (\r\n    <div className={cx(styles.content__header, { blockElement: loading })}>\r\n      <div className={styles[\"content__header-left\"]}>\r\n        <RadioGroup\r\n          value={fileType}\r\n          options={radioOptions}\r\n          size={16}\r\n          label=\"Concat File Type\"\r\n          onChange={(e) => dispatch(setFileType(e.target.value as ConcatFileTypes))}\r\n        />\r\n        <div>\r\n          <TextInputField\r\n            description=\"LEI to search for\"\r\n            placeholder=\"Paste LEI here\"\r\n            width={200}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              dispatch(setValue(e.target.value))\r\n            }\r\n          />\r\n          <Button\r\n            text=\"fetch data\"\r\n            type=\"Animated\"\r\n            clickHandler={() => dispatch(fetchData())}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles[\"content__header-right\"]}>\r\n        <div>\r\n          <p>Last Processed time</p>\r\n          <p>\r\n            {initData\r\n              ? convertDateToString(new Date(initData[\"last_modified\"][\"repexFile\"]))\r\n              : placeholder}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p>Level-2 Data</p>\r\n          <p>\r\n            {initData\r\n              ? `${initData[\"counts\"][\"rrFile\"].toLocaleString()} records`\r\n              : placeholder}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p>Level-1 Data</p>\r\n          <p>\r\n            {initData\r\n              ? `${initData[\"counts\"][\"leiFile\"].toLocaleString()} records`\r\n              : placeholder}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p>Reporting Exceptions</p>\r\n          <p>\r\n            {initData\r\n              ? `${initData[\"counts\"][\"repexFile\"].toLocaleString()} records`\r\n              : placeholder}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConcatHeader;\r\n","import React from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { ConcatState } from \"../../models/concatTypes\";\r\n\r\nimport styles from \"../../styles/tables.module.scss\";\r\n\r\ninterface Props {\r\n  data: ConcatState[\"data\"];\r\n}\r\n\r\nconst ConcatTable: React.FC<Props> = ({ data }) => {\r\n  let columns = Object.keys(data[0]);\r\n\r\n  return (\r\n    <div className={styles.concatTable__table}>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Columns</th>\r\n            {data.map((_, i) => (\r\n              <th key={uuid()}>Result {i + 1}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {columns.map((col) => (\r\n            <tr key={uuid()}>\r\n              <td>{col}</td>\r\n              {data.map((_, i) => (\r\n                <td key={uuid()}>{data[i][col]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConcatTable;\r\n","export default __webpack_public_path__ + \"static/media/no_results.7a0211c7.png\";","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ConcatHeader from \"./ConcatHeader\";\r\nimport ConcatTable from \"./ConcatTable\";\r\nimport { RootState } from \"../../redux/_store\";\r\nimport { fetchInitData } from \"../../redux/concat\";\r\nimport NoResults from \"../../images/no_results.png\";\r\nimport Loader from \"../Common/Loader\";\r\nimport styles from \"../../styles/concat.module.scss\";\r\n\r\nconst ConcatMain = () => {\r\n  const dispatch = useDispatch();\r\n  const { initData } = useSelector((state: RootState) => state.concat);\r\n\r\n  useEffect(() => {\r\n    if (!initData) dispatch(fetchInitData());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const { data, loading, isInitialState } = useSelector(\r\n    (state: RootState) => state.concat\r\n  );\r\n\r\n  let contentComponent: React.ReactNode;\r\n  if (loading) contentComponent = <Loader message=\"fetching data...\" />;\r\n  else if (data.length > 0) contentComponent = <ConcatTable data={data} />;\r\n  else if (!isInitialState) contentComponent = <img src={NoResults} alt=\"No results\" />;\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <ConcatHeader />\r\n      <div className={styles.content__table}>{contentComponent}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConcatMain;\r\n","export default __webpack_public_path__ + \"static/media/BSL_Labs_-_Aug_2019.e2e0f84a.png\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport cx from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaFolderOpen, FaCheckDouble, FaChrome } from \"react-icons/fa\";\r\nimport { RiFileExcel2Line } from \"react-icons/ri\";\r\nimport { IoMdAnalytics } from \"react-icons/io\";\r\n\r\nimport { RootState } from \"../../redux/_store\";\r\nimport BSLLabsLogo from \"../../images/BSL_Labs_-_Aug_2019.png\";\r\nimport routes from \"../../routes\";\r\nimport styles from \"../../styles/sidebar.module.scss\";\r\nimport \"../../styles/_global.scss\";\r\n\r\nconst Sidebar = () => {\r\n  const { loading } = useSelector((state: RootState) => state.scrape);\r\n\r\n  return (\r\n    <div className={cx(styles.sidebar, { blockElement: loading })}>\r\n      <ul>\r\n        <li>\r\n          <div>\r\n            <FaChrome className={styles.icon} />\r\n            <h4>\r\n              <Link to={routes.scrape}>Scrape Tool</Link>\r\n            </h4>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div>\r\n            <FaCheckDouble className={styles.icon} />\r\n            <h4>\r\n              <Link to={routes.dq}>DQ Tool</Link>\r\n            </h4>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div>\r\n            <FaFolderOpen className={styles.icon} />\r\n            <h4>\r\n              <Link to={routes.concat}>Concat Files</Link>\r\n            </h4>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div>\r\n            <RiFileExcel2Line className={styles.icon} />\r\n            <h4>\r\n              <Link to={routes.sop}>SOP</Link>\r\n            </h4>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div>\r\n            <IoMdAnalytics className={styles.icon} />\r\n            <h4>\r\n              <Link to={routes.analytics}>Analytics</Link>\r\n            </h4>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <img src={BSLLabsLogo} className={styles.logo} alt=\"BSL labs logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","const RedirectComponent = () => {\r\n  return (\r\n    <div>\r\n      <h1>You are in the wrong place mate!!!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedirectComponent;\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./components/Common/Header\";\nimport ScrapeMain from \"./components/Scrape/ScrapeMain\";\nimport DQMain from \"./components/DQ/DQMain\";\nimport ConcatMain from \"./components/Concat/ConcatMain\";\nimport Sidebar from \"./components/Common/Sidebar\";\nimport { getToken, isValidToken } from \"./components/Auth/auth\";\nimport RedirectComponent from \"./components/Auth/RedirectComponent\";\nimport routes from \"./routes\";\n\nconst App = () => {\n  const isValid = isValidToken(getToken());\n\n  const mainComponent = (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"Header\">\n          <Header />\n        </div>\n        <div className=\"Sidebar\">\n          <Sidebar />\n        </div>\n        <div className=\"Main\">\n          <Route path={routes.scrape} exact>\n            <ScrapeMain />\n          </Route>\n          <Route path={routes.dq}>\n            <DQMain />\n          </Route>\n          <Route path={routes.concat}>\n            <ConcatMain />\n          </Route>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n\n  return isValid ? mainComponent : <RedirectComponent />;\n};\n\nexport default App;\n","import jwt_decode from \"jwt-decode\";\r\n\r\ninterface Tokens {\r\n  accessToken: string | null;\r\n  idToken: string | null;\r\n}\r\n\r\nexport const getToken = (): Tokens => {\r\n  let accessToken: string | null;\r\n  let idToken: string | null;\r\n\r\n  try {\r\n    accessToken = new URLSearchParams(window.location.hash).get(\"access_token\");\r\n    idToken = new URLSearchParams(window.location.hash).get(\"#id_token\");\r\n  } catch {\r\n    accessToken = new URLSearchParams(window.location.hash).get(\"#access_token\");\r\n    idToken = new URLSearchParams(window.location.hash).get(\"id_token\");\r\n  }\r\n\r\n  console.log(accessToken, idToken);\r\n  return { accessToken, idToken };\r\n};\r\n\r\nexport const isValidToken = ({ accessToken, idToken }: Tokens): Boolean => {\r\n  let decodedAccessToken: any | null;\r\n  let decodedIdToken: any | null;\r\n\r\n  try {\r\n    if (!accessToken || !idToken) {\r\n      console.log(\"tokens not present\");\r\n      return false;\r\n    }\r\n    decodedAccessToken = jwt_decode(accessToken);\r\n    decodedIdToken = jwt_decode(idToken);\r\n  } catch {\r\n    console.log(\"malformed jwt token\");\r\n    return false;\r\n  }\r\n\r\n  console.log(decodedAccessToken);\r\n  console.log(decodedIdToken);\r\n\r\n  return true;\r\n};\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport scrapeReducer from \"./scrape\";\r\nimport dqReducer from \"./dq\";\r\nimport concatReducer from \"./concat\";\r\n\r\nconst rootReducer = combineReducers({\r\n  scrape: scrapeReducer,\r\n  dq: dqReducer,\r\n  concat: concatReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./redux/_store\";\r\nimport \"./styles/_global.scss\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"flexTable_table__1Pwfd\",\"table__header\":\"flexTable_table__header__1picL\",\"table__header-headerCell\":\"flexTable_table__header-headerCell__3rsNv\",\"sort-icon\":\"flexTable_sort-icon__3zOja\",\"active\":\"flexTable_active__iXHNF\",\"table__header-selectInput\":\"flexTable_table__header-selectInput__3eOkd\",\"table__body\":\"flexTable_table__body__3QV5a\",\"table__body-row\":\"flexTable_table__body-row__3-UB8\",\"table__body-row-cell\":\"flexTable_table__body-row-cell__2TYFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dqSingleTable\":\"tables_dqSingleTable__1jJwP\",\"concatTable__table\":\"tables_concatTable__table__3i8xk\",\"scrapeSingle\":\"tables_scrapeSingle__3WMgq\",\"scrapeSingle__table\":\"tables_scrapeSingle__table__1kEpb\",\"scrapeSingle__header\":\"tables_scrapeSingle__header__1b9G0\",\"finished\":\"tables_finished__1DnNF\",\"progress\":\"tables_progress__3iRbe\",\"scrapeSingle__header-icon\":\"tables_scrapeSingle__header-icon__39etg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"dq_content__2QTls\",\"tableContainer\":\"dq_tableContainer__3hg1p\",\"header\":\"dq_header__Q6JmC\",\"header__left\":\"dq_header__left__3JqTB\",\"header__right\":\"dq_header__right__GdCEb\",\"singleTable\":\"dq_singleTable__3974T\",\"singleTable__metadata\":\"dq_singleTable__metadata__2kXOQ\",\"noData\":\"dq_noData__3A1XO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__rzCRZ\",\"icon\":\"sidebar_icon__vSsJD\",\"logo\":\"sidebar_logo__bqQMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"concat_content__3P3Qw\",\"content__header\":\"concat_content__header__2xW9_\",\"content__header-left\":\"concat_content__header-left__2dq9t\",\"content__header-right\":\"concat_content__header-right__2jdGU\",\"content__table\":\"concat_content__table__3-n_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__9uM-v\",\"glief_logo\":\"header_glief_logo__22Bis\",\"lsegLogo\":\"header_lsegLogo__memU-\",\"title\":\"header_title__yMI5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jira\":\"buttons_jira__2Kzu5\",\"animatedButton\":\"buttons_animatedButton__WhO-x\"};"],"sourceRoot":""}